#---------------------------WELCOME----------------------------
print "Optimise lattice constant of MgO crystal"

#--------------------INITIALISATION----------------------------
units metal		#distance in A and energy in eV
atom_style charge	#specifies what properties to associate with atoms

#cell vectors
variable a equal  4.212
atom_modify     map array sort 0 0.0 

region box block 0.0 4.212 -200.0 200.0 -200.0 200.0 units box
boundary p p p  #PBC in x-direction
create_box 2 box  #generate simulation box

# set these parameters
# make sure neigh skin > 2*deltamove

variable iter loop 20            # number of Monte Carlo moves
variable deltaperturb equal 1.0    #0.2 max size of initial perturbation per dim
variable deltamove equal 0.5       #0.1 max size of MC move in one dimension
variable density equal 1.0         # reduced LJ density of atoms on lattice
variable kT equal 0.75             # effective T in Boltzmann factor
variable seed equal 582783         # RNG seed

#read in coordinates
read_dump testmc.xyz 0 x y z box no add yes format xyz

#set up potential
set type 1 charge  2.000000
set type 2 charge -2.000000

mass 1 24.305 #specify mass of atoms
mass 2 15.9994 #specify mass of atoms

pair_style hybrid/overlay buck 8.0 coul/long 8.0
pair_coeff 1 2 buck 1284.38000  0.299700  0.000000 8.0
pair_coeff 2 2 buck 9574.95996  0.219200  32.00000 8.0
pair_coeff * * coul/long 
kspace_style pppm 1.0e-4
pair_modify table 0

neighbor 2.0 bin
neigh_modify delay 0 every 1 check yes

variable        e equal pe

# run 0 to get energy of perfect lattice
# emin = minimum energy

run             0
variable        emin equal $e

# disorder the system
# estart = initial energy

variable        z atom z+v_deltaperturb*random(-1.0,1.0,${seed})
variable        y atom y+v_deltaperturb*random(-1.0,1.0,${seed})

set             group all z v_z
set             group all y v_y

dump 1 all custom 1 dumpmc.lammpstrj id type xs ys zs  #dump info to trjectory file

run             0

variable        estart equal $e
variable        elast equal $e

#-------------------- loop over Monte Carlo moves ----------------------------

variable        naccept equal 0
variable        increment equal v_naccept+1
variable 	nmoves equal 0.0
variable 	nmincrement equal v_nmoves+1
variable        irandom equal floor(atoms*random(0.0,1.0,${seed})+1)
variable        rn equal random(0.0,1.0,${seed})
variable        boltzfactor equal "exp(atoms*(v_elast - v_e) / v_kT)"
variable        znew equal z[v_i]+v_deltamove*random(-1.0,1.0,${seed})
variable        ynew equal y[v_i]+v_deltamove*random(-1.0,1.0,${seed})
variable        zi equal z[v_i]
variable        yi equal y[v_i]

#--------------------- LOOP -----------------------------------
label           loop

variable        i equal ${irandom}

variable        z0 equal ${zi}
variable        y0 equal ${yi}

set             atom $i z ${znew}
set             atom $i y ${ynew}

run             1 pre no post no
variable 	nmoves equal ${nmincrement}
if              "$e <= ${elast}" then &
                  "variable elast equal $e" &
                  "variable naccept equal ${increment}" &
                elif "${rn} <= ${boltzfactor}" &
                  "variable elast equal $e" &
                  "variable naccept equal ${increment}" &
                else &
                  "set atom $i z ${z0}" &
                  "set atom $i y ${y0}" &
		  #"variable 	nmoves equal ${increment}"

next            iter
jump            SELF loop

# final energy and stats

variable       nb equal nbuild
variable       nbuild equal ${nb}
variable       ratio equal "v_naccept/v_nmoves"

run             0

#-------------------------END OF MONTE CARLO------------------------
print           "MC stats:"
print           "  neighbor list rebuilds = ${nbuild}"
print           "  starting energy = ${estart}"
print           "  final energy = $e"
print           "  minimum energy of perfect lattice = ${emin}"
print           "  accepted MC moves = ${naccept}"
print 		"  Total moves = ${nmoves}"
print 		"  Ratio of accepted/Total = ${ratio}"


#-----------------------MINIMISATION-------------------------------
#reset_timestep	0 #start at 0
#thermo 10 #how often to output properties
#thermo_style custom step pe #custom specification of what to print
#dump 1 all custom 1 dump.lammpstrj id type xs ys zs  #dump info to trjectory file
#dump 2 all xyz 1 dump.1d.xyz  #dump info to xyz file
#dump visual all cfg 10 dump.1d.*.cfg mass type xs ys zs vx vy vz
#min_style cg #apply conjugate gradients
#minimize 1e-15 1e-15 5000 5000 #minimiser settings

#----------------------SIMULATION DONE-------------------------------

#variable natoms equal "count(all)" 
#variable teng equal "c_eatoms"
#variable length equal "lx"
#variable ecoh equal "v_teng/v_natoms"

#print "Total energy (eV) = ${teng};"
#print "Number of atoms = ${natoms};"
#print "Lattice constant (Angstoms) = ${length};"
#print "Cohesive energy (eV) = ${ecoh};"

print "Calculation complete"
