LAMMPS (18 Jun 2016-ICMS)
WARNING: OMP_NUM_THREADS environment is not set. (../comm.cpp:90)
  using 1 OpenMP thread(s) per MPI task
#---------------------------WELCOME----------------------------
print "Optimise lattice constant of MgO crystal"
Optimise lattice constant of MgO crystal

#--------------------INITIALISATION----------------------------
units metal		#distance in A and energy in eV
atom_style charge	#specifies what properties to associate with atoms

#cell vectors
variable a equal  4.212
atom_modify     map array sort 0 0.0

region box block 0.0 4.212 0.0 25.272 0.0 25.272 units box
boundary p p p  #PBC in x-direction
create_box 2 box  #generate simulation box
Created orthogonal box = (0 0 0) to (4.212 25.272 25.272)
  1 by 1 by 1 MPI processor grid

# set these parameters
# make sure neigh skin > 2*deltamove

#---------------------------- Parameters ----------------------------------------
#Number of montecarlo steps to run for
variable iter_steps loop 60
#number of steps to disorder system (inf temp)
variable disorder equal 5760
#number of sites in one Montecarlo step


#Temperature
variable T equal 0.026
#Inf temp for disordering
variable kT equal 1000 		#inf T for disorder phase
variable Tdecrease equal v_kT-0.026

variable deltaperturb equal 0.0    #0.2 max size of initial perturbation per dim
variable deltamove equal 1.0    #0.1 max size of MC move in one dimension

variable seed equal 582783
#-------------------------------------------------------------------------------------

#read in coordinates
read_dump testmc.xyz 0 x y z box no add yes format xyz
  orthogonal box = (0 0 0) to (4.212 25.272 25.272)
  0 atoms before read
  288 atoms in snapshot
  0 atoms purged
  0 atoms replaced
  0 atoms trimmed
  288 atoms added
  288 atoms after read

#set up potential
set type 1 charge  2.000000
  144 settings made for charge
set type 2 charge -2.000000
  144 settings made for charge

mass 1 24.305 #specify mass of atoms
mass 2 15.9994 #specify mass of atoms

pair_style hybrid/overlay buck 8.0 coul/long 8.0
pair_coeff 1 2 buck 1284.38000  0.299700  0.000000 8.0
pair_coeff 2 2 buck 9574.95996  0.219200  32.00000 8.0
pair_coeff * * coul/long
kspace_style pppm 1.0e-4
pair_modify table 0

neighbor 0.5 bin
neigh_modify delay 0 every 1 check yes
#neigh_modify check yes
variable        e equal pe

# run 0 to get energy of perfect lattice
# emin = minimum energy

run             0 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Neighbor list info ...
  2 neighbor list requests
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 8.5
  ghost atom cutoff = 8.5
  binsize = 4.25 -> bins = 1 6 6
Memory usage per processor = 3.90743 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0            0   -5925.6712            0   -5925.6712    802.88982 
Loop time of 3.09944e-06 on 1 procs for 0 steps with 288 atoms

96.8% CPU use with 1 MPI tasks x 1 OpenMP threads
variable        emin equal $e
variable        emin equal -5925.67122146364

# -------------------------- setting up system and random displacements -------------
# estart = initial energy

variable        z atom z
variable        y atom y

#variable        z atom z+v_deltaperturb*random(-1.0,1.0,${seed})
#variable        y atom y+v_deltaperturb*random(-1.0,1.0,${seed})

set             group all z v_z
  288 settings made for z
set             group all y v_y
  288 settings made for y
#-------------------------------------------------------------------------------------
dump 1 all custom 1 dumpmc0.026.lammpstrj id type xs ys zs

run             0 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0            0   -5925.6712            0   -5925.6712    802.88982 
Loop time of 2.86102e-06 on 1 procs for 0 steps with 288 atoms

174.8% CPU use with 1 MPI tasks x 1 OpenMP threads

variable        estart equal $e
variable        estart equal -5925.67122146364
variable        elast equal $e
variable        elast equal -5925.67122146364

#-------------------- loop over Monte Carlo moves ----------------------------
#counters
variable        naccept equal 0
variable        increment equal v_naccept+1
variable 	nmoves equal 0.0
variable 	nmincrement equal v_nmoves+1
variable 	disordercounter equal 0
variable 	disincrement equal v_disordercounter+1
variable 	dismoves equal 0

variable        irandom equal floor(atoms*random(0.0,1.0,${seed})+1)
variable        irandom equal floor(atoms*random(0.0,1.0,582783)+1)
variable        rn equal random(0.0,1.0,${seed})
variable        rn equal random(0.0,1.0,582783)
variable        boltzfactor equal "exp((atoms*(v_elast - v_e)) / v_kT)"

variable        znew equal z[v_i]+v_deltamove*random(-1.0,1.0,${seed})
variable        znew equal z[v_i]+v_deltamove*random(-1.0,1.0,582783)
variable        ynew equal y[v_i]+v_deltamove*random(-1.0,1.0,${seed})
variable        ynew equal y[v_i]+v_deltamove*random(-1.0,1.0,582783)

variable 	atomid equal v_i%2
variable        zi equal z[v_i]
variable        yi equal y[v_i]
variable	layeri equal 0
variable 	loweri equal "v_i - 1"
variable 	upperi equal "v_i + 1"

#--------------------- LOOP -----------------------------------
label           loop
label 		loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 192

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 191 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 14.742

variable 	zupdate equal ${znew}
variable 	zupdate equal 23.4677662763596
variable 	yupdate equal ${ynew}
variable 	yupdate equal 13.8675302429199

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 192 z ${zupdate}
set             atom 192 z 23.4677662763596
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 192 y ${yupdate}
set             atom 192 y 13.8675302429199
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 191 z ${zupdate}
set             atom 191 z 23.4677662763596
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 191 y ${yupdate}
set             atom 191 y 13.8675302429199
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5925.67122146364 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0            0   -5905.1633            0   -5905.1633     23624.64 
       1            0   -5905.1633            0   -5905.1633     23624.64 
Loop time of 0.0135739 on 1 procs for 1 steps with 288 atoms

103.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.842021644115448
print "$e ${elast}"
-5905.16334477224 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 192 z ${z0}
set atom 192 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 192 y ${y0}
set atom 192 y 14.742
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 191 z ${z0}
set atom 191 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 191 y ${y0}
set atom 191 y 14.742
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 1

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 1

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 45

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 46 
variable        z0 equal ${zi}
variable        z0 equal 21.06
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 21.9970536804199
variable 	yupdate equal ${ynew}
variable 	yupdate equal 2.00280480957031

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 45 z ${zupdate}
set             atom 45 z 21.9970536804199
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 45 y ${yupdate}
set             atom 45 y 2.00280480957031
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 46 z ${zupdate}
set             atom 46 z 21.9970536804199
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 46 y ${yupdate}
set             atom 46 y 2.00280480957031
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5905.16334477224 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       1            0    -5897.153            0    -5897.153    29598.799 
       2            0    -5897.153            0    -5897.153    29598.799 
Loop time of 0.0134139 on 1 procs for 1 steps with 288 atoms

102.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.212040185928345
print "$e ${elast}"
-5897.15295314148 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 45 z ${z0}
set atom 45 z 21.06
  1 settings made for z
set atom $i y ${y0}
set atom 45 y ${y0}
set atom 45 y 2.106
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 46 z ${z0}
set atom 46 z 21.06
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 46 y ${y0}
set atom 46 y 2.106
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 2

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 2

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 148

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 147 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 12.636

variable 	zupdate equal ${znew}
variable 	zupdate equal 2.52833872413635
variable 	yupdate equal ${ynew}
variable 	yupdate equal 12.15792902565

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 148 z ${zupdate}
set             atom 148 z 2.52833872413635
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 148 y ${yupdate}
set             atom 148 y 12.15792902565
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 147 z ${zupdate}
set             atom 147 z 2.52833872413635
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 147 y ${yupdate}
set             atom 147 y 12.15792902565
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5897.15295314148 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       2            0    -5920.614            0    -5920.614    8521.2034 
       3            0    -5920.614            0    -5920.614    8521.2034 
Loop time of 0.013274 on 1 procs for 1 steps with 288 atoms

101.9% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.36762547492981
print "$e ${elast}"
-5920.61402749708 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 148 z ${z0}
set atom 148 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 148 y ${y0}
set atom 148 y 12.636
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 147 z ${z0}
set atom 147 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 147 y ${y0}
set atom 147 y 12.636
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 3

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 3

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 49

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 50 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal -0.346977591514587
variable 	yupdate equal ${ynew}
variable 	yupdate equal 3.40881179523468

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 49 z ${zupdate}
set             atom 49 z -0.346977591514587
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 49 y ${yupdate}
set             atom 49 y 3.40881179523468
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 50 z ${zupdate}
set             atom 50 z -0.346977591514587
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 50 y ${yupdate}
set             atom 50 y 3.40881179523468
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5920.61402749708 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       3            0   -5910.3931            0   -5910.3931    19162.099 
       4            0   -5910.3931            0   -5910.3931    19162.099 
Loop time of 0.013092 on 1 procs for 1 steps with 288 atoms

101.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.218696594238281
print "$e ${elast}"
-5910.39313639408 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 49 z ${z0}
set atom 49 z 0
  1 settings made for z
set atom $i y ${y0}
set atom 49 y ${y0}
set atom 49 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 50 z ${z0}
set atom 50 z 0
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 50 y ${y0}
set atom 50 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 4

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 4

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 115

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 116 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 18.8134807386398
variable 	yupdate equal ${ynew}
variable 	yupdate equal 7.76911232376099

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 115 z ${zupdate}
set             atom 115 z 18.8134807386398
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 115 y ${yupdate}
set             atom 115 y 7.76911232376099
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 116 z ${zupdate}
set             atom 116 z 18.8134807386398
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 116 y ${yupdate}
set             atom 116 y 7.76911232376099
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5910.39313639408 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       4            0   -5917.1764            0   -5917.1764    12080.806 
       5            0   -5917.1764            0   -5917.1764    12080.806 
Loop time of 0.0130231 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.813913881778717
print "$e ${elast}"
-5917.17637985472 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 115 z ${z0}
set atom 115 z 18.954
  1 settings made for z
set atom $i y ${y0}
set atom 115 y ${y0}
set atom 115 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 116 z ${z0}
set atom 116 z 18.954
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 116 y ${y0}
set atom 116 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 5

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 5

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 167

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 168 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 12.636

variable 	zupdate equal ${znew}
variable 	zupdate equal 24.0781448993683
variable 	yupdate equal ${ynew}
variable 	yupdate equal 13.3860120401382

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 167 z ${zupdate}
set             atom 167 z 24.0781448993683
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 167 y ${yupdate}
set             atom 167 y 13.3860120401382
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 168 z ${zupdate}
set             atom 168 z 24.0781448993683
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 168 y ${yupdate}
set             atom 168 y 13.3860120401382
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5917.17637985472 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       5            0   -5904.6696            0   -5904.6696    24954.659 
       6            0   -5904.6696            0   -5904.6696    24954.659 
Loop time of 0.0135362 on 1 procs for 1 steps with 288 atoms

71.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.617015957832336
print "$e ${elast}"
-5904.66961845911 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 167 z ${z0}
set atom 167 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 167 y ${y0}
set atom 167 y 12.636
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 168 z ${z0}
set atom 168 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 168 y ${y0}
set atom 168 y 12.636
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 6

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 6

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 139

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 140 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 19.3677387275696
variable 	yupdate equal ${ynew}
variable 	yupdate equal 11.1750395584106

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 139 z ${zupdate}
set             atom 139 z 19.3677387275696
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 139 y ${yupdate}
set             atom 139 y 11.1750395584106
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 140 z ${zupdate}
set             atom 140 z 19.3677387275696
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 140 y ${yupdate}
set             atom 140 y 11.1750395584106
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5904.66961845911 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       6            0   -5917.1301            0   -5917.1301    12620.491 
       7            0   -5917.1301            0   -5917.1301    12620.491 
Loop time of 0.013519 on 1 procs for 1 steps with 288 atoms

101.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.402767658233643
print "$e ${elast}"
-5917.13014079309 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 139 z ${z0}
set atom 139 z 18.954
  1 settings made for z
set atom $i y ${y0}
set atom 139 y ${y0}
set atom 139 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 140 z ${z0}
set atom 140 z 18.954
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 140 y ${y0}
set atom 140 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 7

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 7

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 57

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 58 
variable        z0 equal ${zi}
variable        z0 equal 8.424
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 9.22763845825195
variable 	yupdate equal ${ynew}
variable 	yupdate equal 4.98312364768982

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 57 z ${zupdate}
set             atom 57 z 9.22763845825195
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 57 y ${yupdate}
set             atom 57 y 4.98312364768982
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 58 z ${zupdate}
set             atom 58 z 9.22763845825195
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 58 y ${yupdate}
set             atom 58 y 4.98312364768982
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5917.13014079309 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       7            0    -5908.308            0    -5908.308    21801.649 
       8            0    -5908.308            0    -5908.308    21801.649 
Loop time of 0.013252 on 1 procs for 1 steps with 288 atoms

99.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.72507655620575
print "$e ${elast}"
-5908.30797526438 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 57 z ${z0}
set atom 57 z 8.424
  1 settings made for z
set atom $i y ${y0}
set atom 57 y ${y0}
set atom 57 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 58 z ${z0}
set atom 58 z 8.424
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 58 y ${y0}
set atom 58 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 8

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 8

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 78

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 77 
variable        z0 equal ${zi}
variable        z0 equal 4.212
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 4.72417079162598
variable 	yupdate equal ${ynew}
variable 	yupdate equal 5.77997772026062

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 78 z ${zupdate}
set             atom 78 z 4.72417079162598
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 78 y ${yupdate}
set             atom 78 y 5.77997772026062
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 77 z ${zupdate}
set             atom 77 z 4.72417079162598
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 77 y ${yupdate}
set             atom 77 y 5.77997772026062
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5908.30797526438 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       8            0   -5918.6511            0   -5918.6511    11032.368 
       9            0   -5918.6511            0   -5918.6511    11032.368 
Loop time of 0.0129449 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.210056900978088
print "$e ${elast}"
-5918.65109398084 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 78 z ${z0}
set atom 78 z 4.212
  1 settings made for z
set atom $i y ${y0}
set atom 78 y ${y0}
set atom 78 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 77 z ${z0}
set atom 77 z 4.212
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 77 y ${y0}
set atom 77 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 9

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 9

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 131

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 132 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 11.4821919488907
variable 	yupdate equal ${ynew}
variable 	yupdate equal 9.58701208114624

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 131 z ${zupdate}
set             atom 131 z 11.4821919488907
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 131 y ${yupdate}
set             atom 131 y 9.58701208114624
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 132 z ${zupdate}
set             atom 132 z 11.4821919488907
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 132 y ${yupdate}
set             atom 132 y 9.58701208114624
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5918.65109398084 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
       9            0   -5898.7061            0   -5898.7061    29762.638 
      10            0   -5898.7061            0   -5898.7061    29762.638 
Loop time of 0.0130339 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.427482008934021
print "$e ${elast}"
-5898.70613172445 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 131 z ${z0}
set atom 131 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 131 y ${y0}
set atom 131 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 132 z ${z0}
set atom 132 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 132 y ${y0}
set atom 132 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 10

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 10

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 90

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 89 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 16.1112204294205
variable 	yupdate equal ${ynew}
variable 	yupdate equal 6.49460272121429

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 90 z ${zupdate}
set             atom 90 z 16.1112204294205
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 90 y ${yupdate}
set             atom 90 y 6.49460272121429
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 89 z ${zupdate}
set             atom 89 z 16.1112204294205
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 89 y ${yupdate}
set             atom 89 y 6.49460272121429
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5898.70613172445 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      10            0    -5913.514            0    -5913.514    15883.175 
      11            0    -5913.514            0    -5913.514    15883.175 
Loop time of 0.0130639 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.73750501871109
print "$e ${elast}"
-5913.51398934223 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 90 z ${z0}
set atom 90 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 90 y ${y0}
set atom 90 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 89 z ${z0}
set atom 89 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 89 y ${y0}
set atom 89 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 11

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 11

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 133

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 134 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 11.8825463876724
variable 	yupdate equal ${ynew}
variable 	yupdate equal 10.1089422988892

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 133 z ${zupdate}
set             atom 133 z 11.8825463876724
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 133 y ${yupdate}
set             atom 133 y 10.1089422988892
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 134 z ${zupdate}
set             atom 134 z 11.8825463876724
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 134 y ${yupdate}
set             atom 134 y 10.1089422988892
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5913.51398934223 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      11            0   -5913.1363            0   -5913.1363     16745.72 
      12            0   -5913.1363            0   -5913.1363     16745.72 
Loop time of 0.01384 on 1 procs for 1 steps with 288 atoms

71.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.769585072994232
print "$e ${elast}"
-5913.13625163027 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 133 z ${z0}
set atom 133 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 133 y ${y0}
set atom 133 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 134 z ${z0}
set atom 134 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 134 y ${y0}
set atom 134 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 12

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 12

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 122

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 121 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 0.585653305053711
variable 	yupdate equal ${ynew}
variable 	yupdate equal 11.1775411653519

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 122 z ${zupdate}
set             atom 122 z 0.585653305053711
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 122 y ${yupdate}
set             atom 122 y 11.1775411653519
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 121 z ${zupdate}
set             atom 121 z 0.585653305053711
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 121 y ${yupdate}
set             atom 121 y 11.1775411653519
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5913.13625163027 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      12            0    -5915.546            0    -5915.546    14608.028 
      13            0    -5915.546            0    -5915.546    14608.028 
Loop time of 0.013402 on 1 procs for 1 steps with 288 atoms

99.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.940836727619171
print "$e ${elast}"
-5915.54599020755 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 122 z ${z0}
set atom 122 z 0
  1 settings made for z
set atom $i y ${y0}
set atom 122 y ${y0}
set atom 122 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 121 z ${z0}
set atom 121 z 0
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 121 y ${y0}
set atom 121 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 13

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 13

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 48

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 47 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 23.518835059166
variable 	yupdate equal ${ynew}
variable 	yupdate equal 1.54920642948151

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 48 z ${zupdate}
set             atom 48 z 23.518835059166
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 48 y ${yupdate}
set             atom 48 y 1.54920642948151
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 47 z ${zupdate}
set             atom 47 z 23.518835059166
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 47 y ${yupdate}
set             atom 47 y 1.54920642948151
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5915.54599020755 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      13            0   -5919.7133            0   -5919.7133    9549.1179 
      14            0   -5919.7133            0   -5919.7133    9549.1179 
Loop time of 0.01315 on 1 procs for 1 steps with 288 atoms

70.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.732502341270447
print "$e ${elast}"
-5919.71333771798 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 48 z ${z0}
set atom 48 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 48 y ${y0}
set atom 48 y 2.106
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 47 z ${z0}
set atom 47 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 47 y ${y0}
set atom 47 y 2.106
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 14

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 14

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 17

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 18 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 16.4250448446274
variable 	yupdate equal ${ynew}
variable 	yupdate equal 0.0241801738739014

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 17 z ${zupdate}
set             atom 17 z 16.4250448446274
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 17 y ${yupdate}
set             atom 17 y 0.0241801738739014
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 18 z ${zupdate}
set             atom 18 z 16.4250448446274
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 18 y ${yupdate}
set             atom 18 y 0.0241801738739014
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5919.71333771798 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      14            0   -5923.1114            0   -5923.1114    4807.4722 
      15            0   -5923.1114            0   -5923.1114    4807.4722 
Loop time of 0.0129828 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.694545209407806
print "$e ${elast}"
-5923.11137332525 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 17 z ${z0}
set atom 17 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 17 y ${y0}
set atom 17 y 0
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 18 z ${z0}
set atom 18 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 18 y ${y0}
set atom 18 y 0
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 15

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 15

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 18

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 17 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 17.6176679830551
variable 	yupdate equal ${ynew}
variable 	yupdate equal -0.230857610702515

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 18 z ${zupdate}
set             atom 18 z 17.6176679830551
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 18 y ${yupdate}
set             atom 18 y -0.230857610702515
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 17 z ${zupdate}
set             atom 17 z 17.6176679830551
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 17 y ${yupdate}
set             atom 17 y -0.230857610702515
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5923.11137332525 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      15            0   -5911.8573            0   -5911.8573    17560.663 
      16            0   -5911.8573            0   -5911.8573    17560.663 
Loop time of 0.0129712 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.455615103244781
print "$e ${elast}"
-5911.8573015356 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 18 z ${z0}
set atom 18 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 18 y ${y0}
set atom 18 y 0
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 17 z ${z0}
set atom 17 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 17 y ${y0}
set atom 17 y 0
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 16

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 16

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 196

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 195 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 16.848

variable 	zupdate equal ${znew}
variable 	zupdate equal 2.26435654735565
variable 	yupdate equal ${ynew}
variable 	yupdate equal 17.3286439876556

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 196 z ${zupdate}
set             atom 196 z 2.26435654735565
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 196 y ${yupdate}
set             atom 196 y 17.3286439876556
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 195 z ${zupdate}
set             atom 195 z 2.26435654735565
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 195 y ${yupdate}
set             atom 195 y 17.3286439876556
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5911.8573015356 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      16            0   -5921.9704            0   -5921.9704    6433.9856 
      17            0   -5921.9704            0   -5921.9704    6433.9856 
Loop time of 0.0132279 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.705874741077423
print "$e ${elast}"
-5921.97039269926 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 196 z ${z0}
set atom 196 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 196 y ${y0}
set atom 196 y 16.848
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 195 z ${z0}
set atom 195 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 195 y ${y0}
set atom 195 y 16.848
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 17

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 17

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 266

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 265 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 23.166

variable 	zupdate equal ${znew}
variable 	zupdate equal 0.873459577560425
variable 	yupdate equal ${ynew}
variable 	yupdate equal 22.8347915325165

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 266 z ${zupdate}
set             atom 266 z 0.873459577560425
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 266 y ${yupdate}
set             atom 266 y 22.8347915325165
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 265 z ${zupdate}
set             atom 265 z 0.873459577560425
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 265 y ${yupdate}
set             atom 265 y 22.8347915325165
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5921.97039269926 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      17            0   -5905.5362            0   -5905.5362    23379.881 
      18            0   -5905.5362            0   -5905.5362    23379.881 
Loop time of 0.013557 on 1 procs for 1 steps with 288 atoms

99.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.968304574489594
print "$e ${elast}"
-5905.53620646629 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 266 z ${z0}
set atom 266 z 0
  1 settings made for z
set atom $i y ${y0}
set atom 266 y ${y0}
set atom 266 y 23.166
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 265 z ${z0}
set atom 265 z 0
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 265 y ${y0}
set atom 265 y 23.166
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 18

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 18

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 216

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 215 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 16.848

variable 	zupdate equal ${znew}
variable 	zupdate equal 23.9745150718689
variable 	yupdate equal ${ynew}
variable 	yupdate equal 16.1892535190582

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 216 z ${zupdate}
set             atom 216 z 23.9745150718689
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 216 y ${yupdate}
set             atom 216 y 16.1892535190582
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 215 z ${zupdate}
set             atom 215 z 23.9745150718689
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 215 y ${yupdate}
set             atom 215 y 16.1892535190582
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5905.53620646629 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      18            0   -5909.9164            0   -5909.9164    20255.989 
      19            0   -5909.9164            0   -5909.9164    20255.989 
Loop time of 0.0134151 on 1 procs for 1 steps with 288 atoms

99.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.38390976190567
print "$e ${elast}"
-5909.91636987871 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 216 z ${z0}
set atom 216 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 216 y ${y0}
set atom 216 y 16.848
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 215 z ${z0}
set atom 215 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 215 y ${y0}
set atom 215 y 16.848
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 19

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 19

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 91

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 92 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 18.5493778028488
variable 	yupdate equal ${ynew}
variable 	yupdate equal 6.52110747623444

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 91 z ${zupdate}
set             atom 91 z 18.5493778028488
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 91 y ${yupdate}
set             atom 91 y 6.52110747623444
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 92 z ${zupdate}
set             atom 92 z 18.5493778028488
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 92 y ${yupdate}
set             atom 92 y 6.52110747623444
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5909.91636987871 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      19            0   -5923.0466            0   -5923.0466    5011.3158 
      20            0   -5923.0466            0   -5923.0466    5011.3158 
Loop time of 0.0131559 on 1 procs for 1 steps with 288 atoms

99.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.859176576137543
print "$e ${elast}"
-5923.0466478795 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 91 z ${z0}
set atom 91 z 18.954
  1 settings made for z
set atom $i y ${y0}
set atom 91 y ${y0}
set atom 91 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 92 z ${z0}
set atom 92 z 18.954
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 92 y ${y0}
set atom 92 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 20

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 20

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 20

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 19 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 19.2414072790146
variable 	yupdate equal ${ynew}
variable 	yupdate equal -0.765084862709045

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 20 z ${zupdate}
set             atom 20 z 19.2414072790146
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 20 y ${yupdate}
set             atom 20 y -0.765084862709045
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 19 z ${zupdate}
set             atom 19 z 19.2414072790146
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 19 y ${yupdate}
set             atom 19 y -0.765084862709045
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5923.0466478795 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      20            0   -5912.3024            0   -5912.3024    17247.818 
      21            0   -5912.3024            0   -5912.3024    17247.818 
Loop time of 0.0130091 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.718173146247864
print "$e ${elast}"
-5912.30238350518 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 20 z ${z0}
set atom 20 z 18.954
  1 settings made for z
set atom $i y ${y0}
set atom 20 y ${y0}
set atom 20 y 0
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 19 z ${z0}
set atom 19 z 18.954
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 19 y ${y0}
set atom 19 y 0
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 21

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 21

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 108

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 107 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 11.4496580648422
variable 	yupdate equal ${ynew}
variable 	yupdate equal 7.86871919536591

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 108 z ${zupdate}
set             atom 108 z 11.4496580648422
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 108 y ${yupdate}
set             atom 108 y 7.86871919536591
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 107 z ${zupdate}
set             atom 107 z 11.4496580648422
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 107 y ${yupdate}
set             atom 107 y 7.86871919536591
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5912.30238350518 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      21            0   -5904.3999            0   -5904.3999    24886.375 
      22            0   -5904.3999            0   -5904.3999    24886.375 
Loop time of 0.013025 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.704320669174194
print "$e ${elast}"
-5904.39987412607 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 108 z ${z0}
set atom 108 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 108 y ${y0}
set atom 108 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 107 z ${z0}
set atom 107 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 107 y ${y0}
set atom 107 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 22

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 22

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 132

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 131 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 9.5565839099884
variable 	yupdate equal ${ynew}
variable 	yupdate equal 10.1707656669617

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 132 z ${zupdate}
set             atom 132 z 9.5565839099884
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 132 y ${yupdate}
set             atom 132 y 10.1707656669617
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 131 z ${zupdate}
set             atom 131 z 9.5565839099884
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 131 y ${yupdate}
set             atom 131 y 10.1707656669617
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5904.39987412607 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      22            0   -5896.8415            0   -5896.8415    30314.635 
      23            0   -5896.8415            0   -5896.8415    30314.635 
Loop time of 0.013284 on 1 procs for 1 steps with 288 atoms

99.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.243532717227936
print "$e ${elast}"
-5896.84150558946 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 132 z ${z0}
set atom 132 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 132 y ${y0}
set atom 132 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 131 z ${z0}
set atom 131 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 131 y ${y0}
set atom 131 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 23

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 23

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 93

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 94 
variable        z0 equal ${zi}
variable        z0 equal 21.06
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 21.5780163383484
variable 	yupdate equal ${ynew}
variable 	yupdate equal 6.39482025432587

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 93 z ${zupdate}
set             atom 93 z 21.5780163383484
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 93 y ${yupdate}
set             atom 93 y 6.39482025432587
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 94 z ${zupdate}
set             atom 94 z 21.5780163383484
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 94 y ${yupdate}
set             atom 94 y 6.39482025432587
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5896.84150558946 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      23            0   -5921.3076            0   -5921.3076    7223.8511 
      24            0   -5921.3076            0   -5921.3076    7223.8511 
Loop time of 0.0134521 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.902269065380096
print "$e ${elast}"
-5921.30757916097 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 93 z ${z0}
set atom 93 z 21.06
  1 settings made for z
set atom $i y ${y0}
set atom 93 y ${y0}
set atom 93 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 94 z ${z0}
set atom 94 z 21.06
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 94 y ${y0}
set atom 94 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 24

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 24

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 132

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 131 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 10.1946155118942
variable 	yupdate equal ${ynew}
variable 	yupdate equal 11.274682431221

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 132 z ${zupdate}
set             atom 132 z 10.1946155118942
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 132 y ${yupdate}
set             atom 132 y 11.274682431221
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 131 z ${zupdate}
set             atom 131 z 10.1946155118942
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 131 y ${yupdate}
set             atom 131 y 11.274682431221
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5921.30757916097 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      24            0   -5913.4559            0   -5913.4559    16236.812 
      25            0   -5913.4559            0   -5913.4559    16236.812 
Loop time of 0.0133278 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.579312920570374
print "$e ${elast}"
-5913.45587041474 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 132 z ${z0}
set atom 132 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 132 y ${y0}
set atom 132 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 131 z ${z0}
set atom 131 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 131 y ${y0}
set atom 131 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 25

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 25

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 245

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 246 
variable        z0 equal ${zi}
variable        z0 equal 4.212
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal 4.01799105358124
variable 	yupdate equal ${ynew}
variable 	yupdate equal 21.3747321939468

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 245 z ${zupdate}
set             atom 245 z 4.01799105358124
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 245 y ${yupdate}
set             atom 245 y 21.3747321939468
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 246 z ${zupdate}
set             atom 246 z 4.01799105358124
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 246 y ${yupdate}
set             atom 246 y 21.3747321939468
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5913.45587041474 -5925.67122146364
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      25            0   -5924.0502            0   -5924.0502    3520.5441 
      26            0   -5924.0502            0   -5924.0502    3520.5441 
Loop time of 0.0130589 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.1958087682724
print "$e ${elast}"
-5924.05024105981 -5925.67122146364
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5924.05024105981
variable naccept equal ${increment}
variable naccept equal 1
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      26            0   -5924.0502            0   -5924.0502    3520.5441 
      27            0   -5924.0502            0   -5924.0502    3520.5441 
Loop time of 0.0129969 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 26

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 26

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 226

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 225 
variable        z0 equal ${zi}
variable        z0 equal 8.424
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal 8.94011018180847
variable 	yupdate equal ${ynew}
variable 	yupdate equal 18.4688274898529

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 226 z ${zupdate}
set             atom 226 z 8.94011018180847
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 226 y ${yupdate}
set             atom 226 y 18.4688274898529
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 225 z ${zupdate}
set             atom 225 z 8.94011018180847
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 225 y ${yupdate}
set             atom 225 y 18.4688274898529
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5924.05024105981 -5924.05024105981
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      27            0   -5917.7469            0   -5917.7469    12885.604 
      28            0   -5917.7469            0   -5917.7469    12885.604 
Loop time of 0.0129962 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.997072577476501
print "$e ${elast}"
-5917.74693757523 -5924.05024105981
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 226 z ${z0}
set atom 226 z 8.424
  1 settings made for z
set atom $i y ${y0}
set atom 226 y ${y0}
set atom 226 y 18.954
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 225 z ${z0}
set atom 225 z 8.424
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 225 y ${y0}
set atom 225 y 18.954
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 27

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 27

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 100

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 99 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 2.4522108373642
variable 	yupdate equal ${ynew}
variable 	yupdate equal 8.03251383209228

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 100 z ${zupdate}
set             atom 100 z 2.4522108373642
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 100 y ${yupdate}
set             atom 100 y 8.03251383209228
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 99 z ${zupdate}
set             atom 99 z 2.4522108373642
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 99 y ${yupdate}
set             atom 99 y 8.03251383209228
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5917.74693757523 -5924.05024105981
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      28            0   -5920.7749            0   -5920.7749    8773.2182 
      29            0   -5920.7749            0   -5920.7749    8773.2182 
Loop time of 0.0130098 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.228519678115845
print "$e ${elast}"
-5920.77492813972 -5924.05024105981
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5920.77492813972
variable naccept equal ${increment}
variable naccept equal 2
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      29            0   -5920.7749            0   -5920.7749    8773.2182 
      30            0   -5920.7749            0   -5920.7749    8773.2182 
Loop time of 0.013818 on 1 procs for 1 steps with 288 atoms

99.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 28

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 28

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 158

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 157 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 12.636

variable 	zupdate equal ${znew}
variable 	zupdate equal 13.5800129995346
variable 	yupdate equal ${ynew}
variable 	yupdate equal 13.4088073596954

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 158 z ${zupdate}
set             atom 158 z 13.5800129995346
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 158 y ${yupdate}
set             atom 158 y 13.4088073596954
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 157 z ${zupdate}
set             atom 157 z 13.5800129995346
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 157 y ${yupdate}
set             atom 157 y 13.4088073596954
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5920.77492813972 -5920.77492813972
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      30            0   -5898.0122            0   -5898.0122    34402.602 
      31            0   -5898.0122            0   -5898.0122    34402.602 
Loop time of 0.0134599 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.611698806285858
print "$e ${elast}"
-5898.01223473678 -5920.77492813972
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 158 z ${z0}
set atom 158 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 158 y ${y0}
set atom 158 y 12.636
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 157 z ${z0}
set atom 157 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 157 y ${y0}
set atom 157 y 12.636
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 29

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 29

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 32

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 31 
variable        z0 equal ${zi}
variable        z0 equal 6.318
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 6.66383425521851
variable 	yupdate equal ${ynew}
variable 	yupdate equal 2.94908612346649

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 32 z ${zupdate}
set             atom 32 z 6.66383425521851
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 32 y ${yupdate}
set             atom 32 y 2.94908612346649
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 31 z ${zupdate}
set             atom 31 z 6.66383425521851
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 31 y ${yupdate}
set             atom 31 y 2.94908612346649
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5898.01223473678 -5920.77492813972
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      31            0   -5902.9716            0   -5902.9716    29387.405 
      32            0   -5902.9716            0   -5902.9716    29387.405 
Loop time of 0.0133128 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.0341795086860657
print "$e ${elast}"
-5902.97164565322 -5920.77492813972
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 32 z ${z0}
set atom 32 z 6.318
  1 settings made for z
set atom $i y ${y0}
set atom 32 y ${y0}
set atom 32 y 2.106
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 31 z ${z0}
set atom 31 z 6.318
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 31 y ${y0}
set atom 31 y 2.106
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 30

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 30

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 217

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 218 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal -0.363459467887878
variable 	yupdate equal ${ynew}
variable 	yupdate equal 18.8416194953918

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 217 z ${zupdate}
set             atom 217 z -0.363459467887878
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 217 y ${yupdate}
set             atom 217 y 18.8416194953918
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 218 z ${zupdate}
set             atom 218 z -0.363459467887878
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 218 y ${yupdate}
set             atom 218 y 18.8416194953918
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5902.97164565322 -5920.77492813972
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      32            0   -5918.9031            0   -5918.9031    11820.669 
      33            0   -5918.9031            0   -5918.9031    11820.669 
Loop time of 0.013056 on 1 procs for 1 steps with 288 atoms

100.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.708602547645569
print "$e ${elast}"
-5918.90310507169 -5920.77492813972
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 217 z ${z0}
set atom 217 z 0
  1 settings made for z
set atom $i y ${y0}
set atom 217 y ${y0}
set atom 217 y 18.954
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 218 z ${z0}
set atom 218 z 0
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 218 y ${y0}
set atom 218 y 18.954
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 31

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 31

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 237

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 238 
variable        z0 equal ${zi}
variable        z0 equal 21.06
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal 22.0461334562302
variable 	yupdate equal ${ynew}
variable 	yupdate equal 19.3899521865845

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 237 z ${zupdate}
set             atom 237 z 22.0461334562302
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 237 y ${yupdate}
set             atom 237 y 19.3899521865845
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 238 z ${zupdate}
set             atom 238 z 22.0461334562302
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 238 y ${yupdate}
set             atom 238 y 19.3899521865845
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5918.90310507169 -5920.77492813972
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      33            0   -5892.2602            0   -5892.2602    38266.286 
      34            0   -5892.2602            0   -5892.2602    38266.286 
Loop time of 0.013098 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.378549814224243
print "$e ${elast}"
-5892.26023083725 -5920.77492813972
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 237 z ${z0}
set atom 237 z 21.06
  1 settings made for z
set atom $i y ${y0}
set atom 237 y ${y0}
set atom 237 y 18.954
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 238 z ${z0}
set atom 238 z 21.06
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 238 y ${y0}
set atom 238 y 18.954
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 32

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 32

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 90

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 89 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 17.3596566419601
variable 	yupdate equal ${ynew}
variable 	yupdate equal 6.96575109291077

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 90 z ${zupdate}
set             atom 90 z 17.3596566419601
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 90 y ${yupdate}
set             atom 90 y 6.96575109291077
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 89 z ${zupdate}
set             atom 89 z 17.3596566419601
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 89 y ${yupdate}
set             atom 89 y 6.96575109291077
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5892.26023083725 -5920.77492813972
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      34            0   -5911.4951            0   -5911.4951    21576.282 
      35            0   -5911.4951            0   -5911.4951    21576.282 
Loop time of 0.013036 on 1 procs for 1 steps with 288 atoms

69.7% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.214978456497192
print "$e ${elast}"
-5911.49507397885 -5920.77492813972
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 90 z ${z0}
set atom 90 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 90 y ${y0}
set atom 90 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 89 z ${z0}
set atom 89 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 89 y ${y0}
set atom 89 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 33

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 33

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 272

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 271 
variable        z0 equal ${zi}
variable        z0 equal 6.318
variable        y0 equal ${yi}
variable        y0 equal 23.166

variable 	zupdate equal ${znew}
variable 	zupdate equal 6.06466047096252
variable 	yupdate equal ${ynew}
variable 	yupdate equal 23.7622617397308

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 272 z ${zupdate}
set             atom 272 z 6.06466047096252
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 272 y ${yupdate}
set             atom 272 y 23.7622617397308
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 271 z ${zupdate}
set             atom 271 z 6.06466047096252
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 271 y ${yupdate}
set             atom 271 y 23.7622617397308
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5911.49507397885 -5920.77492813972
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      35            0   -5914.1097            0   -5914.1097    18121.278 
      36            0   -5914.1097            0   -5914.1097    18121.278 
Loop time of 0.0140159 on 1 procs for 1 steps with 288 atoms

100.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.052403450012207
print "$e ${elast}"
-5914.10974684797 -5920.77492813972
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5914.10974684797
variable naccept equal ${increment}
variable naccept equal 3
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      36            0   -5914.1097            0   -5914.1097    18121.278 
      37            0   -5914.1097            0   -5914.1097    18121.278 
Loop time of 0.0133259 on 1 procs for 1 steps with 288 atoms

99.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 34

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 34

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 107

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 108 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 9.77342858791351
variable 	yupdate equal ${ynew}
variable 	yupdate equal 8.27103612327576

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 107 z ${zupdate}
set             atom 107 z 9.77342858791351
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 107 y ${yupdate}
set             atom 107 y 8.27103612327576
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 108 z ${zupdate}
set             atom 108 z 9.77342858791351
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 108 y ${yupdate}
set             atom 108 y 8.27103612327576
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5914.10974684797 -5914.10974684797
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      37            0   -5900.8167            0   -5900.8167    34265.692 
      38            0   -5900.8167            0   -5900.8167    34265.692 
Loop time of 0.013417 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.83708381652832
print "$e ${elast}"
-5900.81666358189 -5914.10974684797
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 107 z ${z0}
set atom 107 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 107 y ${y0}
set atom 107 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 108 z ${z0}
set atom 108 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 108 y ${y0}
set atom 108 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 35

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 35

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 203

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 204 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 16.848

variable 	zupdate equal ${znew}
variable 	zupdate equal 10.5909146356583
variable 	yupdate equal ${ynew}
variable 	yupdate equal 16.4981268148422

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 203 z ${zupdate}
set             atom 203 z 10.5909146356583
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 203 y ${yupdate}
set             atom 203 y 16.4981268148422
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 204 z ${zupdate}
set             atom 204 z 10.5909146356583
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 204 y ${yupdate}
set             atom 204 y 16.4981268148422
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5900.81666358189 -5914.10974684797
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      38            0   -5912.4663            0   -5912.4663    20808.728 
      39            0   -5912.4663            0   -5912.4663    20808.728 
Loop time of 0.013195 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.316343307495117
print "$e ${elast}"
-5912.46625492672 -5914.10974684797
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5912.46625492672
variable naccept equal ${increment}
variable naccept equal 4
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      39            0   -5912.4663            0   -5912.4663    20808.728 
      40            0   -5912.4663            0   -5912.4663    20808.728 
Loop time of 0.012918 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 36

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 36

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 95

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 96 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 22.4014073524475
variable 	yupdate equal ${ynew}
variable 	yupdate equal 6.35929695892334

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 95 z ${zupdate}
set             atom 95 z 22.4014073524475
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 95 y ${yupdate}
set             atom 95 y 6.35929695892334
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 96 z ${zupdate}
set             atom 96 z 22.4014073524475
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 96 y ${yupdate}
set             atom 96 y 6.35929695892334
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5912.46625492672 -5912.46625492672
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      40            0   -5898.5212            0   -5898.5212    37489.251 
      41            0   -5898.5212            0   -5898.5212    37489.251 
Loop time of 0.0129359 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.0934283137321472
print "$e ${elast}"
-5898.52116894712 -5912.46625492672
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 95 z ${z0}
set atom 95 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 95 y ${y0}
set atom 95 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 96 z ${z0}
set atom 96 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 96 y ${y0}
set atom 96 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 37

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 37

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 272

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 271 
variable        z0 equal ${zi}
variable        z0 equal 6.06466047096252
variable        y0 equal ${yi}
variable        y0 equal 23.7622617397308

variable 	zupdate equal ${znew}
variable 	zupdate equal 5.31221656131744
variable 	yupdate equal ${ynew}
variable 	yupdate equal 23.8187845859527

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 272 z ${zupdate}
set             atom 272 z 5.31221656131744
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 272 y ${yupdate}
set             atom 272 y 23.8187845859527
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 271 z ${zupdate}
set             atom 271 z 5.31221656131744
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 271 y ${yupdate}
set             atom 271 y 23.8187845859527
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5898.52116894712 -5912.46625492672
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      41            0   -5892.1966            0   -5892.1966    40081.781 
      42            0   -5892.1966            0   -5892.1966    40081.781 
Loop time of 0.013005 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.281054258346558
print "$e ${elast}"
-5892.19657824736 -5912.46625492672
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 272 z ${z0}
set atom 272 z 6.06466047096252
  1 settings made for z
set atom $i y ${y0}
set atom 272 y ${y0}
set atom 272 y 23.7622617397308
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 271 z ${z0}
set atom 271 z 6.06466047096252
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 271 y ${y0}
set atom 271 y 23.7622617397308
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 38

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 38

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 40

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 39 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 14.1424485607147
variable 	yupdate equal ${ynew}
variable 	yupdate equal 1.74589210128784

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 40 z ${zupdate}
set             atom 40 z 14.1424485607147
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 40 y ${yupdate}
set             atom 40 y 1.74589210128784
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 39 z ${zupdate}
set             atom 39 z 14.1424485607147
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 39 y ${yupdate}
set             atom 39 y 1.74589210128784
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5892.19657824736 -5912.46625492672
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      42            0    -5905.439            0    -5905.439    30824.824 
      43            0    -5905.439            0    -5905.439    30824.824 
Loop time of 0.0138621 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.874207139015198
print "$e ${elast}"
-5905.43902785995 -5912.46625492672
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 40 z ${z0}
set atom 40 z 14.742
  1 settings made for z
set atom $i y ${y0}
set atom 40 y ${y0}
set atom 40 y 2.106
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 39 z ${z0}
set atom 39 z 14.742
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 39 y ${y0}
set atom 39 y 2.106
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 39

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 39

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 72

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 71 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 24.0829595241547
variable 	yupdate equal ${ynew}
variable 	yupdate equal 3.34478698921204

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 72 z ${zupdate}
set             atom 72 z 24.0829595241547
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 72 y ${yupdate}
set             atom 72 y 3.34478698921204
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 71 z ${zupdate}
set             atom 71 z 24.0829595241547
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 71 y ${yupdate}
set             atom 71 y 3.34478698921204
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5905.43902785995 -5912.46625492672
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      43            0    -5889.133            0    -5889.133    46906.599 
      44            0    -5889.133            0    -5889.133    46906.599 
Loop time of 0.0134439 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.297454595565796
print "$e ${elast}"
-5889.13296950683 -5912.46625492672
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 72 z ${z0}
set atom 72 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 72 y ${y0}
set atom 72 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 71 z ${z0}
set atom 71 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 71 y ${y0}
set atom 71 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 40

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 40

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 48

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 47 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 23.986641875267
variable 	yupdate equal ${ynew}
variable 	yupdate equal 2.75181775665283

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 48 z ${zupdate}
set             atom 48 z 23.986641875267
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 48 y ${yupdate}
set             atom 48 y 2.75181775665283
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 47 z ${zupdate}
set             atom 47 z 23.986641875267
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 47 y ${yupdate}
set             atom 47 y 2.75181775665283
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5889.13296950683 -5912.46625492672
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      44            0   -5896.3607            0   -5896.3607    40566.518 
      45            0   -5896.3607            0   -5896.3607    40566.518 
Loop time of 0.013212 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.372238636016846
print "$e ${elast}"
-5896.36069166638 -5912.46625492672
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 48 z ${z0}
set atom 48 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 48 y ${y0}
set atom 48 y 2.106
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 47 z ${z0}
set atom 47 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 47 y ${y0}
set atom 47 y 2.106
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 41

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 41

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 117

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 118 
variable        z0 equal ${zi}
variable        z0 equal 21.06
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 20.7550761079788
variable 	yupdate equal ${ynew}
variable 	yupdate equal 8.19978234672546

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 117 z ${zupdate}
set             atom 117 z 20.7550761079788
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 117 y ${yupdate}
set             atom 117 y 8.19978234672546
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 118 z ${zupdate}
set             atom 118 z 20.7550761079788
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 118 y ${yupdate}
set             atom 118 y 8.19978234672546
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5896.36069166638 -5912.46625492672
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      45            0   -5910.7957            0   -5910.7957    23621.874 
      46            0   -5910.7957            0   -5910.7957    23621.874 
Loop time of 0.0130801 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.816989958286285
print "$e ${elast}"
-5910.795684133 -5912.46625492672
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 117 z ${z0}
set atom 117 z 21.06
  1 settings made for z
set atom $i y ${y0}
set atom 117 y ${y0}
set atom 117 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 118 z ${z0}
set atom 118 z 21.06
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 118 y ${y0}
set atom 118 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 42

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 42

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 189

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 190 
variable        z0 equal ${zi}
variable        z0 equal 21.06
variable        y0 equal ${yi}
variable        y0 equal 14.742

variable 	zupdate equal ${znew}
variable 	zupdate equal 21.2055178260803
variable 	yupdate equal ${ynew}
variable 	yupdate equal 14.6059351129532

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 189 z ${zupdate}
set             atom 189 z 21.2055178260803
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 189 y ${yupdate}
set             atom 189 y 14.6059351129532
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 190 z ${zupdate}
set             atom 190 z 21.2055178260803
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 190 y ${yupdate}
set             atom 190 y 14.6059351129532
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5910.795684133 -5912.46625492672
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      46            0   -5912.0264            0   -5912.0264    21585.269 
      47            0   -5912.0264            0   -5912.0264    21585.269 
Loop time of 0.013026 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.852766096591949
print "$e ${elast}"
-5912.02638931177 -5912.46625492672
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5912.02638931177
variable naccept equal ${increment}
variable naccept equal 5
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      47            0   -5912.0264            0   -5912.0264    21585.269 
      48            0   -5912.0264            0   -5912.0264    21585.269 
Loop time of 0.0130529 on 1 procs for 1 steps with 288 atoms

99.7% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 43

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 43

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 32

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 31 
variable        z0 equal ${zi}
variable        z0 equal 6.318
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 6.57454780864716
variable 	yupdate equal ${ynew}
variable 	yupdate equal 1.58917718505859

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 32 z ${zupdate}
set             atom 32 z 6.57454780864716
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 32 y ${yupdate}
set             atom 32 y 1.58917718505859
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 31 z ${zupdate}
set             atom 31 z 6.57454780864716
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 31 y ${yupdate}
set             atom 31 y 1.58917718505859
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5912.02638931177 -5912.02638931177
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      48            0   -5906.9706            0   -5906.9706    28701.014 
      49            0   -5906.9706            0   -5906.9706    28701.014 
Loop time of 0.0138509 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.20708042383194
print "$e ${elast}"
-5906.97055011122 -5912.02638931177
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5906.97055011122
variable naccept equal ${increment}
variable naccept equal 6
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      49            0   -5906.9706            0   -5906.9706    28701.014 
      50            0   -5906.9706            0   -5906.9706    28701.014 
Loop time of 0.0133669 on 1 procs for 1 steps with 288 atoms

70.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 44

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 44

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 268

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 267 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 23.166

variable 	zupdate equal ${znew}
variable 	zupdate equal 2.27228134250641
variable 	yupdate equal ${ynew}
variable 	yupdate equal 23.8165796909332

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 268 z ${zupdate}
set             atom 268 z 2.27228134250641
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 268 y ${yupdate}
set             atom 268 y 23.8165796909332
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 267 z ${zupdate}
set             atom 267 z 2.27228134250641
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 267 y ${yupdate}
set             atom 267 y 23.8165796909332
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5906.97055011122 -5906.97055011122
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      50            0   -5899.1667            0   -5899.1667    39627.731 
      51            0   -5899.1667            0   -5899.1667    39627.731 
Loop time of 0.0133259 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.352331876754761
print "$e ${elast}"
-5899.16666279882 -5906.97055011122
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 268 z ${z0}
set atom 268 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 268 y ${y0}
set atom 268 y 23.166
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 267 z ${z0}
set atom 267 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 267 y ${y0}
set atom 267 y 23.166
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 45

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 45

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 241

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 242 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal -0.799762368202209
variable 	yupdate equal ${ynew}
variable 	yupdate equal 21.980546412468

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 241 z ${zupdate}
set             atom 241 z -0.799762368202209
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 241 y ${yupdate}
set             atom 241 y 21.980546412468
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 242 z ${zupdate}
set             atom 242 z -0.799762368202209
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 242 y ${yupdate}
set             atom 242 y 21.980546412468
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5899.16666279882 -5906.97055011122
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      51            0   -5884.9649            0   -5884.9649    53739.239 
      52            0   -5884.9649            0   -5884.9649    53739.239 
Loop time of 0.013016 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.274553656578064
print "$e ${elast}"
-5884.96485314317 -5906.97055011122
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 241 z ${z0}
set atom 241 z 0
  1 settings made for z
set atom $i y ${y0}
set atom 241 y ${y0}
set atom 241 y 21.06
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 242 z ${z0}
set atom 242 z 0
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 242 y ${y0}
set atom 242 y 21.06
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 46

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 46

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 133

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 134 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 13.2620769367218
variable 	yupdate equal ${ynew}
variable 	yupdate equal 11.0544451761246

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 133 z ${zupdate}
set             atom 133 z 13.2620769367218
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 133 y ${yupdate}
set             atom 133 y 11.0544451761246
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 134 z ${zupdate}
set             atom 134 z 13.2620769367218
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 134 y ${yupdate}
set             atom 134 y 11.0544451761246
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5884.96485314317 -5906.97055011122
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      52            0   -5898.0913            0   -5898.0913    41082.621 
      53            0   -5898.0913            0   -5898.0913    41082.621 
Loop time of 0.013046 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.405825138092041
print "$e ${elast}"
-5898.09133101018 -5906.97055011122
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 133 z ${z0}
set atom 133 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 133 y ${y0}
set atom 133 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 134 z ${z0}
set atom 134 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 134 y ${y0}
set atom 134 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 47

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 47

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 67

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 68 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 18.7379710712433
variable 	yupdate equal ${ynew}
variable 	yupdate equal 4.36123202991486

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 67 z ${zupdate}
set             atom 67 z 18.7379710712433
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 67 y ${yupdate}
set             atom 67 y 4.36123202991486
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 68 z ${zupdate}
set             atom 68 z 18.7379710712433
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 68 y ${yupdate}
set             atom 68 y 4.36123202991486
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5898.09133101018 -5906.97055011122
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      53            0   -5906.1903            0   -5906.1903    30055.915 
      54            0   -5906.1903            0   -5906.1903    30055.915 
Loop time of 0.012995 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.702337503433228
print "$e ${elast}"
-5906.19030822066 -5906.97055011122
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5906.19030822066
variable naccept equal ${increment}
variable naccept equal 7
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      54            0   -5906.1903            0   -5906.1903    30055.915 
      55            0   -5906.1903            0   -5906.1903    30055.915 
Loop time of 0.013869 on 1 procs for 1 steps with 288 atoms

100.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 48

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 48

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 84

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 83 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 10.3982867288589
variable 	yupdate equal ${ynew}
variable 	yupdate equal 5.36001424121857

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 84 z ${zupdate}
set             atom 84 z 10.3982867288589
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 84 y ${yupdate}
set             atom 84 y 5.36001424121857
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 83 z ${zupdate}
set             atom 83 z 10.3982867288589
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 83 y ${yupdate}
set             atom 83 y 5.36001424121857
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5906.19030822066 -5906.19030822066
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      55            0   -5875.4245            0   -5875.4245    60533.768 
      56            0   -5875.4245            0   -5875.4245    60533.768 
Loop time of 0.013449 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.104685723781586
print "$e ${elast}"
-5875.42446748366 -5906.19030822066
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 84 z ${z0}
set atom 84 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 84 y ${y0}
set atom 84 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 83 z ${z0}
set atom 83 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 83 y ${y0}
set atom 83 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 49

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 49

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 207

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 208 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 16.848

variable 	zupdate equal ${znew}
variable 	zupdate equal 14.5700955553055
variable 	yupdate equal ${ynew}
variable 	yupdate equal 16.8068212966919

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 207 z ${zupdate}
set             atom 207 z 14.5700955553055
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 207 y ${yupdate}
set             atom 207 y 16.8068212966919
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 208 z ${zupdate}
set             atom 208 z 14.5700955553055
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 208 y ${yupdate}
set             atom 208 y 16.8068212966919
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5875.42446748366 -5906.19030822066
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      56            0   -5905.8281            0   -5905.8281    30682.117 
      57            0   -5905.8281            0   -5905.8281    30682.117 
Loop time of 0.0133119 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.149661004543304
print "$e ${elast}"
-5905.82807959452 -5906.19030822066
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5905.82807959452
variable naccept equal ${increment}
variable naccept equal 8
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      57            0   -5905.8281            0   -5905.8281    30682.117 
      58            0   -5905.8281            0   -5905.8281    30682.117 
Loop time of 0.012907 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 50

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 50

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 206

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 205 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 16.848

variable 	zupdate equal ${znew}
variable 	zupdate equal 13.4791286811829
variable 	yupdate equal ${ynew}
variable 	yupdate equal 16.71636373806

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 206 z ${zupdate}
set             atom 206 z 13.4791286811829
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 206 y ${yupdate}
set             atom 206 y 16.71636373806
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 205 z ${zupdate}
set             atom 205 z 13.4791286811829
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 205 y ${yupdate}
set             atom 205 y 16.71636373806
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5905.82807959452 -5905.82807959452
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      58            0   -5868.1668            0   -5868.1668    65304.643 
      59            0   -5868.1668            0   -5868.1668    65304.643 
Loop time of 0.0129781 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.530564963817596
print "$e ${elast}"
-5868.16680005655 -5905.82807959452
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 206 z ${z0}
set atom 206 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 206 y ${y0}
set atom 206 y 16.848
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 205 z ${z0}
set atom 205 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 205 y ${y0}
set atom 205 y 16.848
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 51

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 51

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 89

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 90 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 17.5591049890518
variable 	yupdate equal ${ynew}
variable 	yupdate equal 5.55529944229126

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 89 z ${zupdate}
set             atom 89 z 17.5591049890518
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 89 y ${yupdate}
set             atom 89 y 5.55529944229126
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 90 z ${zupdate}
set             atom 90 z 17.5591049890518
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 90 y ${yupdate}
set             atom 90 y 5.55529944229126
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5868.16680005655 -5905.82807959452
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      59            0   -5884.0544            0   -5884.0544    54160.765 
      60            0   -5884.0544            0   -5884.0544    54160.765 
Loop time of 0.013005 on 1 procs for 1 steps with 288 atoms

69.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.592719793319702
print "$e ${elast}"
-5884.05437035948 -5905.82807959452
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 89 z ${z0}
set atom 89 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 89 y ${y0}
set atom 89 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 90 z ${z0}
set atom 90 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 90 y ${y0}
set atom 90 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 52

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 52

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 3

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 4 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 1.22656362628937
variable 	yupdate equal ${ynew}
variable 	yupdate equal -0.424766540527344

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 3 z ${zupdate}
set             atom 3 z 1.22656362628937
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 3 y ${yupdate}
set             atom 3 y -0.424766540527344
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 4 z ${zupdate}
set             atom 4 z 1.22656362628937
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 4 y ${yupdate}
set             atom 4 y -0.424766540527344
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5884.05437035948 -5905.82807959452
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      60            0    -5886.087            0    -5886.087    53099.379 
      61            0    -5886.087            0    -5886.087    53099.379 
Loop time of 0.0134158 on 1 procs for 1 steps with 288 atoms

70.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.416098177433014
print "$e ${elast}"
-5886.08698193813 -5905.82807959452
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 3 z ${z0}
set atom 3 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 3 y ${y0}
set atom 3 y 0
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 4 z ${z0}
set atom 4 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 4 y ${y0}
set atom 4 y 0
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 53

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 53

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 21

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 22 
variable        z0 equal ${zi}
variable        z0 equal 21.06
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 21.1390476799011
variable 	yupdate equal ${ynew}
variable 	yupdate equal -0.407036185264587

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 21 z ${zupdate}
set             atom 21 z 21.1390476799011
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 21 y ${yupdate}
set             atom 21 y -0.407036185264587
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 22 z ${zupdate}
set             atom 22 z 21.1390476799011
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 22 y ${yupdate}
set             atom 22 y -0.407036185264587
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5886.08698193813 -5905.82807959452
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      61            0   -5903.4715            0   -5903.4715     34434.64 
      62            0   -5903.4715            0   -5903.4715     34434.64 
Loop time of 0.013495 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.141186535358429
print "$e ${elast}"
-5903.47151819702 -5905.82807959452
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5903.47151819702
variable naccept equal ${increment}
variable naccept equal 9
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      62            0   -5903.4715            0   -5903.4715     34434.64 
      63            0   -5903.4715            0   -5903.4715     34434.64 
Loop time of 0.0134308 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 54

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 54

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 114

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 113 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 16.6137786607742
variable 	yupdate equal ${ynew}
variable 	yupdate equal 7.53169617557526

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 114 z ${zupdate}
set             atom 114 z 16.6137786607742
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 114 y ${yupdate}
set             atom 114 y 7.53169617557526
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 113 z ${zupdate}
set             atom 113 z 16.6137786607742
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 113 y ${yupdate}
set             atom 113 y 7.53169617557526
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5903.47151819702 -5903.47151819702
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      63            0   -5880.8377            0   -5880.8377     58918.34 
      64            0   -5880.8377            0   -5880.8377     58918.34 
Loop time of 0.0130761 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.686436533927917
print "$e ${elast}"
-5880.8377154839 -5903.47151819702
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 114 z ${z0}
set atom 114 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 114 y ${y0}
set atom 114 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 113 z ${z0}
set atom 113 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 113 y ${y0}
set atom 113 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 55

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 55

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 220

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 219 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal 2.1226050195694
variable 	yupdate equal ${ynew}
variable 	yupdate equal 19.9032607116699

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 220 z ${zupdate}
set             atom 220 z 2.1226050195694
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 220 y ${yupdate}
set             atom 220 y 19.9032607116699
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 219 z ${zupdate}
set             atom 219 z 2.1226050195694
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 219 y ${yupdate}
set             atom 219 y 19.9032607116699
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5880.8377154839 -5903.47151819702
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      64            0   -5872.9712            0   -5872.9712    64559.214 
      65            0   -5872.9712            0   -5872.9712    64559.214 
Loop time of 0.0130439 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.973142147064209
print "$e ${elast}"
-5872.97124137562 -5903.47151819702
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 220 z ${z0}
set atom 220 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 220 y ${y0}
set atom 220 y 18.954
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 219 z ${z0}
set atom 219 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 219 y ${y0}
set atom 219 y 18.954
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 56

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 56

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 278

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 277 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 23.166

variable 	zupdate equal ${znew}
variable 	zupdate equal 13.1586377248764
variable 	yupdate equal ${ynew}
variable 	yupdate equal 23.2063329133987

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 278 z ${zupdate}
set             atom 278 z 13.1586377248764
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 278 y ${yupdate}
set             atom 278 y 23.2063329133987
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 277 z ${zupdate}
set             atom 277 z 13.1586377248764
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 277 y ${yupdate}
set             atom 277 y 23.2063329133987
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5872.97124137562 -5903.47151819702
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      65            0   -5899.0227            0   -5899.0227     40946.74 
      66            0   -5899.0227            0   -5899.0227     40946.74 
Loop time of 0.013057 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.45758318901062
print "$e ${elast}"
-5899.02267319495 -5903.47151819702
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 278 z ${z0}
set atom 278 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 278 y ${y0}
set atom 278 y 23.166
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 277 z ${z0}
set atom 277 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 277 y ${y0}
set atom 277 y 23.166
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 57

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 57

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 64

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 63 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 15.3258568210602
variable 	yupdate equal ${ynew}
variable 	yupdate equal 5.17739330482483

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 64 z ${zupdate}
set             atom 64 z 15.3258568210602
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 64 y ${yupdate}
set             atom 64 y 5.17739330482483
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 63 z ${zupdate}
set             atom 63 z 15.3258568210602
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 63 y ${yupdate}
set             atom 63 y 5.17739330482483
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5899.02267319495 -5903.47151819702
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      66            0   -5879.1331            0   -5879.1331    61015.042 
      67            0   -5879.1331            0   -5879.1331    61015.042 
Loop time of 0.0134552 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.79836767911911
print "$e ${elast}"
-5879.1330976066 -5903.47151819702
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 64 z ${z0}
set atom 64 z 14.742
  1 settings made for z
set atom $i y ${y0}
set atom 64 y ${y0}
set atom 64 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 63 z ${z0}
set atom 63 z 14.742
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 63 y ${y0}
set atom 63 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 58

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 58

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 242

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 241 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal -0.907909035682678
variable 	yupdate equal ${ynew}
variable 	yupdate equal 20.1569936847687

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 242 z ${zupdate}
set             atom 242 z -0.907909035682678
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 242 y ${yupdate}
set             atom 242 y 20.1569936847687
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 241 z ${zupdate}
set             atom 241 z -0.907909035682678
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 241 y ${yupdate}
set             atom 241 y 20.1569936847687
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5879.1330976066 -5903.47151819702
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      67            0   -5879.4771            0   -5879.4771    61099.053 
      68            0   -5879.4771            0   -5879.4771    61099.053 
Loop time of 0.0134871 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.293916523456573
print "$e ${elast}"
-5879.47709764249 -5903.47151819702
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 242 z ${z0}
set atom 242 z 0
  1 settings made for z
set atom $i y ${y0}
set atom 242 y ${y0}
set atom 242 y 21.06
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 241 z ${z0}
set atom 241 z 0
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 241 y ${y0}
set atom 241 y 21.06
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 59

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 59

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 20

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 19 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 19.1824997701645
variable 	yupdate equal ${ynew}
variable 	yupdate equal -0.303631186485291

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 20 z ${zupdate}
set             atom 20 z 19.1824997701645
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 20 y ${yupdate}
set             atom 20 y -0.303631186485291
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 19 z ${zupdate}
set             atom 19 z 19.1824997701645
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 19 y ${yupdate}
set             atom 19 y -0.303631186485291
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5879.47709764249 -5903.47151819702
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      68            0   -5902.1238            0   -5902.1238    37264.589 
      69            0   -5902.1238            0   -5902.1238    37264.589 
Loop time of 0.0133359 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.335926353931427
print "$e ${elast}"
-5902.1237585706 -5903.47151819702
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5902.1237585706
variable naccept equal ${increment}
variable naccept equal 10
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      69            0   -5902.1238            0   -5902.1238    37264.589 
      70            0   -5902.1238            0   -5902.1238    37264.589 
Loop time of 0.0130219 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 60

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 60

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 90

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 89 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 16.5733651618958
variable 	yupdate equal ${ynew}
variable 	yupdate equal 6.42926828193665

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 90 z ${zupdate}
set             atom 90 z 16.5733651618958
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 90 y ${yupdate}
set             atom 90 y 6.42926828193665
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 89 z ${zupdate}
set             atom 89 z 16.5733651618958
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 89 y ${yupdate}
set             atom 89 y 6.42926828193665
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5902.1237585706 -5902.1237585706
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      70            0   -5901.3856            0   -5901.3856    38934.299 
      71            0   -5901.3856            0   -5901.3856    38934.299 
Loop time of 0.013027 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.187477111816406
print "$e ${elast}"
-5901.38555081012 -5902.1237585706
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5901.38555081012
variable naccept equal ${increment}
variable naccept equal 11
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      71            0   -5901.3856            0   -5901.3856    38934.299 
      72            0   -5901.3856            0   -5901.3856    38934.299 
Loop time of 0.0129299 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 61

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 61

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 26

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 25 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 0.475520253181458
variable 	yupdate equal ${ynew}
variable 	yupdate equal 2.92079871273041

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 26 z ${zupdate}
set             atom 26 z 0.475520253181458
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 26 y ${yupdate}
set             atom 26 y 2.92079871273041
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 25 z ${zupdate}
set             atom 25 z 0.475520253181458
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 25 y ${yupdate}
set             atom 25 y 2.92079871273041
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5901.38555081012 -5901.38555081012
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      72            0   -5885.9461            0   -5885.9461    57750.057 
      73            0   -5885.9461            0   -5885.9461    57750.057 
Loop time of 0.0129838 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.0111575722694397
print "$e ${elast}"
-5885.9460573031 -5901.38555081012
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5885.9460573031
variable naccept equal ${increment}
variable naccept equal 12
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      73            0   -5885.9461            0   -5885.9461    57750.057 
      74            0   -5885.9461            0   -5885.9461    57750.057 
Loop time of 0.0138359 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 62

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 62

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 109

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 110 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 12.4992379770279
variable 	yupdate equal ${ynew}
variable 	yupdate equal 9.3548248758316

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 109 z ${zupdate}
set             atom 109 z 12.4992379770279
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 109 y ${yupdate}
set             atom 109 y 9.3548248758316
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 110 z ${zupdate}
set             atom 110 z 12.4992379770279
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 110 y ${yupdate}
set             atom 110 y 9.3548248758316
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5885.9460573031 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      74            0   -5858.3647            0   -5858.3647    85860.334 
      75            0   -5858.3647            0   -5858.3647    85860.334 
Loop time of 0.013299 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.870408713817596
print "$e ${elast}"
-5858.36474980543 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 109 z ${z0}
set atom 109 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 109 y ${y0}
set atom 109 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 110 z ${z0}
set atom 110 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 110 y ${y0}
set atom 110 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 63

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 63

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 72

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 71 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 22.1680399093628
variable 	yupdate equal ${ynew}
variable 	yupdate equal 4.05837486934662

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 72 z ${zupdate}
set             atom 72 z 22.1680399093628
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 72 y ${yupdate}
set             atom 72 y 4.05837486934662
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 71 z ${zupdate}
set             atom 71 z 22.1680399093628
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 71 y ${yupdate}
set             atom 71 y 4.05837486934662
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5858.36474980543 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      75            0   -5850.6975            0   -5850.6975    91640.543 
      76            0   -5850.6975            0   -5850.6975    91640.543 
Loop time of 0.0135732 on 1 procs for 1 steps with 288 atoms

99.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.521006762981415
print "$e ${elast}"
-5850.69752496538 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 72 z ${z0}
set atom 72 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 72 y ${y0}
set atom 72 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 71 z ${z0}
set atom 71 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 71 y ${y0}
set atom 71 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 64

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 64

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 61

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 62 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 12.7232800350189
variable 	yupdate equal ${ynew}
variable 	yupdate equal 5.10588990402222

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 61 z ${zupdate}
set             atom 61 z 12.7232800350189
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 61 y ${yupdate}
set             atom 61 y 5.10588990402222
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 62 z ${zupdate}
set             atom 62 z 12.7232800350189
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 62 y ${yupdate}
set             atom 62 y 5.10588990402222
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5850.69752496538 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      76            0   -5861.9921            0   -5861.9921    83064.594 
      77            0   -5861.9921            0   -5861.9921    83064.594 
Loop time of 0.013047 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.556918561458588
print "$e ${elast}"
-5861.99206192698 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 61 z ${z0}
set atom 61 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 61 y ${y0}
set atom 61 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 62 z ${z0}
set atom 62 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 62 y ${y0}
set atom 62 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 65

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 65

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 181

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 182 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 14.742

variable 	zupdate equal ${znew}
variable 	zupdate equal 12.3326465711594
variable 	yupdate equal ${ynew}
variable 	yupdate equal 14.0989704294205

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 181 z ${zupdate}
set             atom 181 z 12.3326465711594
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 181 y ${yupdate}
set             atom 181 y 14.0989704294205
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 182 z ${zupdate}
set             atom 182 z 12.3326465711594
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 182 y ${yupdate}
set             atom 182 y 14.0989704294205
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5861.99206192698 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      77            0   -5878.3853            0   -5878.3853    68705.684 
      78            0   -5878.3853            0   -5878.3853    68705.684 
Loop time of 0.0130379 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.484303176403046
print "$e ${elast}"
-5878.38526637889 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 181 z ${z0}
set atom 181 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 181 y ${y0}
set atom 181 y 14.742
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 182 z ${z0}
set atom 182 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 182 y ${y0}
set atom 182 y 14.742
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 66

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 66

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 160

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 159 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 12.636

variable 	zupdate equal ${znew}
variable 	zupdate equal 15.3536222143173
variable 	yupdate equal ${ynew}
variable 	yupdate equal 13.5850437507629

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 160 z ${zupdate}
set             atom 160 z 15.3536222143173
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 160 y ${yupdate}
set             atom 160 y 13.5850437507629
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 159 z ${zupdate}
set             atom 159 z 15.3536222143173
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 159 y ${yupdate}
set             atom 159 y 13.5850437507629
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5878.38526637889 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      78            0   -5863.1367            0   -5863.1367    83230.338 
      79            0   -5863.1367            0   -5863.1367    83230.338 
Loop time of 0.0130291 on 1 procs for 1 steps with 288 atoms

99.7% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.287512063980103
print "$e ${elast}"
-5863.13669834086 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 160 z ${z0}
set atom 160 z 14.742
  1 settings made for z
set atom $i y ${y0}
set atom 160 y ${y0}
set atom 160 y 12.636
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 159 z ${z0}
set atom 159 z 14.742
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 159 y ${y0}
set atom 159 y 12.636
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 67

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 67

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 265

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 266 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 23.166

variable 	zupdate equal ${znew}
variable 	zupdate equal 0.715784430503845
variable 	yupdate equal ${ynew}
variable 	yupdate equal 22.7395303163528

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 265 z ${zupdate}
set             atom 265 z 0.715784430503845
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 265 y ${yupdate}
set             atom 265 y 22.7395303163528
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 266 z ${zupdate}
set             atom 266 z 0.715784430503845
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 266 y ${yupdate}
set             atom 266 y 22.7395303163528
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5863.13669834086 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      79            0   -5875.0154            0   -5875.0154    72165.415 
      80            0   -5875.0154            0   -5875.0154    72165.415 
Loop time of 0.013942 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.62237823009491
print "$e ${elast}"
-5875.01536035045 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 265 z ${z0}
set atom 265 z 0
  1 settings made for z
set atom $i y ${y0}
set atom 265 y ${y0}
set atom 265 y 23.166
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 266 z ${z0}
set atom 266 z 0
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 266 y ${y0}
set atom 266 y 23.166
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 68

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 68

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 17

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 18 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 16.3714555006027
variable 	yupdate equal ${ynew}
variable 	yupdate equal -0.363736867904663

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 17 z ${zupdate}
set             atom 17 z 16.3714555006027
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 17 y ${yupdate}
set             atom 17 y -0.363736867904663
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 18 z ${zupdate}
set             atom 18 z 16.3714555006027
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 18 y ${yupdate}
set             atom 18 y -0.363736867904663
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5875.01536035045 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      80            0    -5881.772            0    -5881.772    65741.094 
      81            0    -5881.772            0    -5881.772    65741.094 
Loop time of 0.0136509 on 1 procs for 1 steps with 288 atoms

98.8% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.823562443256378
print "$e ${elast}"
-5881.77201181356 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 17 z ${z0}
set atom 17 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 17 y ${y0}
set atom 17 y 0
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 18 z ${z0}
set atom 18 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 18 y ${y0}
set atom 18 y 0
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 69

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 69

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 51

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 52 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 1.53573005771637
variable 	yupdate equal ${ynew}
variable 	yupdate equal 3.78192971897125

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 51 z ${zupdate}
set             atom 51 z 1.53573005771637
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 51 y ${yupdate}
set             atom 51 y 3.78192971897125
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 52 z ${zupdate}
set             atom 52 z 1.53573005771637
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 52 y ${yupdate}
set             atom 52 y 3.78192971897125
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5881.77201181356 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      81            0   -5851.1389            0   -5851.1389    87660.596 
      82            0   -5851.1389            0   -5851.1389    87660.596 
Loop time of 0.0132649 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.431713461875916
print "$e ${elast}"
-5851.13889388874 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 51 z ${z0}
set atom 51 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 51 y ${y0}
set atom 51 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 52 z ${z0}
set atom 52 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 52 y ${y0}
set atom 52 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 70

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 70

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 29

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 30 
variable        z0 equal ${zi}
variable        z0 equal 4.212
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 3.96356378746033
variable 	yupdate equal ${ynew}
variable 	yupdate equal 1.36391668891907

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 29 z ${zupdate}
set             atom 29 z 3.96356378746033
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 29 y ${yupdate}
set             atom 29 y 1.36391668891907
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 30 z ${zupdate}
set             atom 30 z 3.96356378746033
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 30 y ${yupdate}
set             atom 30 y 1.36391668891907
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5851.13889388874 -5885.9460573031
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      82            0   -5874.6308            0   -5874.6308      74153.1 
      83            0   -5874.6308            0   -5874.6308      74153.1 
Loop time of 0.0130041 on 1 procs for 1 steps with 288 atoms

99.7% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.000582277774810791
print "$e ${elast}"
-5874.63079027492 -5885.9460573031
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5874.63079027492
variable naccept equal ${increment}
variable naccept equal 13
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      83            0   -5874.6308            0   -5874.6308      74153.1 
      84            0   -5874.6308            0   -5874.6308      74153.1 
Loop time of 0.012912 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 71

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 71

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 57

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 58 
variable        z0 equal ${zi}
variable        z0 equal 8.424
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 7.6217413892746
variable 	yupdate equal ${ynew}
variable 	yupdate equal 5.13887427997589

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 57 z ${zupdate}
set             atom 57 z 7.6217413892746
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 57 y ${yupdate}
set             atom 57 y 5.13887427997589
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 58 z ${zupdate}
set             atom 58 z 7.6217413892746
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 58 y ${yupdate}
set             atom 58 y 5.13887427997589
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5874.63079027492 -5874.63079027492
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      84            0    -5852.195            0    -5852.195    99491.206 
      85            0    -5852.195            0    -5852.195    99491.206 
Loop time of 0.0129271 on 1 procs for 1 steps with 288 atoms

99.7% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.18013322353363
print "$e ${elast}"
-5852.19496374677 -5874.63079027492
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 57 z ${z0}
set atom 57 z 8.424
  1 settings made for z
set atom $i y ${y0}
set atom 57 y ${y0}
set atom 57 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 58 z ${z0}
set atom 58 z 8.424
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 58 y ${y0}
set atom 58 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 72

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 72

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 192

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 191 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 14.742

variable 	zupdate equal ${znew}
variable 	zupdate equal 22.2115008745193
variable 	yupdate equal ${ynew}
variable 	yupdate equal 14.3178155584335

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 192 z ${zupdate}
set             atom 192 z 22.2115008745193
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 192 y ${yupdate}
set             atom 192 y 14.3178155584335
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 191 z ${zupdate}
set             atom 191 z 22.2115008745193
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 191 y ${yupdate}
set             atom 191 y 14.3178155584335
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5852.19496374677 -5874.63079027492
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      85            0   -5826.2195            0   -5826.2195    117239.56 
      86            0   -5826.2195            0   -5826.2195    117239.56 
Loop time of 0.0139329 on 1 procs for 1 steps with 288 atoms

100.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.927699506282806
print "$e ${elast}"
-5826.21945894192 -5874.63079027492
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 192 z ${z0}
set atom 192 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 192 y ${y0}
set atom 192 y 14.742
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 191 z ${z0}
set atom 191 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 191 y ${y0}
set atom 191 y 14.742
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 73

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 73

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 247

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 248 
variable        z0 equal ${zi}
variable        z0 equal 6.318
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal 7.03719989585876
variable 	yupdate equal ${ynew}
variable 	yupdate equal 20.636122879982

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 247 z ${zupdate}
set             atom 247 z 7.03719989585876
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 247 y ${yupdate}
set             atom 247 y 20.636122879982
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 248 z ${zupdate}
set             atom 248 z 7.03719989585876
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 248 y ${yupdate}
set             atom 248 y 20.636122879982
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5826.21945894192 -5874.63079027492
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      86            0   -5864.6336            0   -5864.6336    91291.822 
      87            0   -5864.6336            0   -5864.6336    91291.822 
Loop time of 0.01354 on 1 procs for 1 steps with 288 atoms

100.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.979495465755463
print "$e ${elast}"
-5864.63360050605 -5874.63079027492
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 247 z ${z0}
set atom 247 z 6.318
  1 settings made for z
set atom $i y ${y0}
set atom 247 y ${y0}
set atom 247 y 21.06
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 248 z ${z0}
set atom 248 z 6.318
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 248 y ${y0}
set atom 248 y 21.06
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 74

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 74

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 231

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 232 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal 15.2466210289001
variable 	yupdate equal ${ynew}
variable 	yupdate equal 18.2800453939438

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 231 z ${zupdate}
set             atom 231 z 15.2466210289001
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 231 y ${yupdate}
set             atom 231 y 18.2800453939438
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 232 z ${zupdate}
set             atom 232 z 15.2466210289001
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 232 y ${yupdate}
set             atom 232 y 18.2800453939438
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5864.63360050605 -5874.63079027492
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      87            0   -5866.5113            0   -5866.5113    84581.388 
      88            0   -5866.5113            0   -5866.5113    84581.388 
Loop time of 0.0133319 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.9631627202034
print "$e ${elast}"
-5866.51130229107 -5874.63079027492
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 231 z ${z0}
set atom 231 z 14.742
  1 settings made for z
set atom $i y ${y0}
set atom 231 y ${y0}
set atom 231 y 18.954
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 232 z ${z0}
set atom 232 z 14.742
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 232 y ${y0}
set atom 232 y 18.954
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 75

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 75

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 59

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 60 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 11.1350064563751
variable 	yupdate equal ${ynew}
variable 	yupdate equal 4.95172487449646

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 59 z ${zupdate}
set             atom 59 z 11.1350064563751
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 59 y ${yupdate}
set             atom 59 y 4.95172487449646
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 60 z ${zupdate}
set             atom 60 z 11.1350064563751
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 60 y ${yupdate}
set             atom 60 y 4.95172487449646
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5866.51130229107 -5874.63079027492
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      88            0   -5861.7916            0   -5861.7916    90758.601 
      89            0   -5861.7916            0   -5861.7916    90758.601 
Loop time of 0.013042 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.160320162773132
print "$e ${elast}"
-5861.79163685695 -5874.63079027492
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 59 z ${z0}
set atom 59 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 59 y ${y0}
set atom 59 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 60 z ${z0}
set atom 60 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 60 y ${y0}
set atom 60 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 76

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 76

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 218

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 217 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal -0.615471243858337
variable 	yupdate equal ${ynew}
variable 	yupdate equal 18.9453778305054

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 218 z ${zupdate}
set             atom 218 z -0.615471243858337
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 218 y ${yupdate}
set             atom 218 y 18.9453778305054
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 217 z ${zupdate}
set             atom 217 z -0.615471243858337
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 217 y ${yupdate}
set             atom 217 y 18.9453778305054
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5861.79163685695 -5874.63079027492
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      89            0   -5867.5645            0   -5867.5645    83774.656 
      90            0   -5867.5645            0   -5867.5645    83774.656 
Loop time of 0.0129919 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.122853100299835
print "$e ${elast}"
-5867.56453545756 -5874.63079027492
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5867.56453545756
variable naccept equal ${increment}
variable naccept equal 14
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      90            0   -5867.5645            0   -5867.5645    83774.656 
      91            0   -5867.5645            0   -5867.5645    83774.656 
Loop time of 0.012898 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 77

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 77

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 59

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 60 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 11.4528477478027
variable 	yupdate equal ${ynew}
variable 	yupdate equal 4.90545271587372

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 59 z ${zupdate}
set             atom 59 z 11.4528477478027
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 59 y ${yupdate}
set             atom 59 y 4.90545271587372
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 60 z ${zupdate}
set             atom 60 z 11.4528477478027
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 60 y ${yupdate}
set             atom 60 y 4.90545271587372
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5867.56453545756 -5867.56453545756
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      91            0   -5846.4376            0   -5846.4376    107977.56 
      92            0   -5846.4376            0   -5846.4376    107977.56 
Loop time of 0.0138948 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.989817678928375
print "$e ${elast}"
-5846.4376335778 -5867.56453545756
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 59 z ${z0}
set atom 59 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 59 y ${y0}
set atom 59 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 60 z ${z0}
set atom 60 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 60 y ${y0}
set atom 60 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 78

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 78

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 42

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 41 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 16.2241483430862
variable 	yupdate equal ${ynew}
variable 	yupdate equal 1.81421571350098

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 42 z ${zupdate}
set             atom 42 z 16.2241483430862
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 42 y ${yupdate}
set             atom 42 y 1.81421571350098
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 41 z ${zupdate}
set             atom 41 z 16.2241483430862
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 41 y ${yupdate}
set             atom 41 y 1.81421571350098
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5846.4376335778 -5867.56453545756
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      92            0   -5859.8096            0   -5859.8096    94275.225 
      93            0   -5859.8096            0   -5859.8096    94275.225 
Loop time of 0.0135162 on 1 procs for 1 steps with 288 atoms

99.3% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.728123068809509
print "$e ${elast}"
-5859.80959349454 -5867.56453545756
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 42 z ${z0}
set atom 42 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 42 y ${y0}
set atom 42 y 2.106
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 41 z ${z0}
set atom 41 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 41 y ${y0}
set atom 41 y 2.106
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 79

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 79

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 273

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 274 
variable        z0 equal ${zi}
variable        z0 equal 8.424
variable        y0 equal ${yi}
variable        y0 equal 23.166

variable 	zupdate equal ${znew}
variable 	zupdate equal 7.99227616691589
variable 	yupdate equal ${ynew}
variable 	yupdate equal 23.3287291440964

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 273 z ${zupdate}
set             atom 273 z 7.99227616691589
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 273 y ${yupdate}
set             atom 273 y 23.3287291440964
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 274 z ${zupdate}
set             atom 274 z 7.99227616691589
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 274 y ${yupdate}
set             atom 274 y 23.3287291440964
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5859.80959349454 -5867.56453545756
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      93            0   -5866.4282            0   -5866.4282    84893.346 
      94            0   -5866.4282            0   -5866.4282    84893.346 
Loop time of 0.013315 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.63935923576355
print "$e ${elast}"
-5866.42821977498 -5867.56453545756
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5866.42821977498
variable naccept equal ${increment}
variable naccept equal 15
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      94            0   -5866.4282            0   -5866.4282    84893.346 
      95            0   -5866.4282            0   -5866.4282    84893.346 
Loop time of 0.0129659 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 80

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 80

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 253

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 254 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal 13.3091830835342
variable 	yupdate equal ${ynew}
variable 	yupdate equal 21.5308677530289

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 253 z ${zupdate}
set             atom 253 z 13.3091830835342
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 253 y ${yupdate}
set             atom 253 y 21.5308677530289
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 254 z ${zupdate}
set             atom 254 z 13.3091830835342
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 254 y ${yupdate}
set             atom 254 y 21.5308677530289
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5866.42821977498 -5866.42821977498
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      95            0   -5856.7787            0   -5856.7787    98061.575 
      96            0   -5856.7787            0   -5856.7787    98061.575 
Loop time of 0.0129859 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.685357570648193
print "$e ${elast}"
-5856.77871890355 -5866.42821977498
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 253 z ${z0}
set atom 253 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 253 y ${y0}
set atom 253 y 21.06
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 254 z ${z0}
set atom 254 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 254 y ${y0}
set atom 254 y 21.06
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 81

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 81

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 127

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 128 
variable        z0 equal ${zi}
variable        z0 equal 6.318
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 6.77633575725555
variable 	yupdate equal ${ynew}
variable 	yupdate equal 11.0382532167435

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 127 z ${zupdate}
set             atom 127 z 6.77633575725555
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 127 y ${yupdate}
set             atom 127 y 11.0382532167435
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 128 z ${zupdate}
set             atom 128 z 6.77633575725555
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 128 y ${yupdate}
set             atom 128 y 11.0382532167435
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5856.77871890355 -5866.42821977498
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      96            0   -5860.5277            0   -5860.5277    93699.196 
      97            0   -5860.5277            0   -5860.5277    93699.196 
Loop time of 0.0130332 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.972666800022125
print "$e ${elast}"
-5860.52771950815 -5866.42821977498
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 127 z ${z0}
set atom 127 z 6.318
  1 settings made for z
set atom $i y ${y0}
set atom 127 y ${y0}
set atom 127 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 128 z ${z0}
set atom 128 z 6.318
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 128 y ${y0}
set atom 128 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 82

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 82

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 160

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 159 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 12.636

variable 	zupdate equal ${znew}
variable 	zupdate equal 14.1999192399979
variable 	yupdate equal ${ynew}
variable 	yupdate equal 13.5169316158295

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 160 z ${zupdate}
set             atom 160 z 14.1999192399979
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 160 y ${yupdate}
set             atom 160 y 13.5169316158295
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 159 z ${zupdate}
set             atom 159 z 14.1999192399979
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 159 y ${yupdate}
set             atom 159 y 13.5169316158295
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5860.52771950815 -5866.42821977498
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      97            0   -5847.4192            0   -5847.4192    106966.91 
      98            0   -5847.4192            0   -5847.4192    106966.91 
Loop time of 0.0134811 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.988438069820404
print "$e ${elast}"
-5847.41919552655 -5866.42821977498
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 160 z ${z0}
set atom 160 z 14.742
  1 settings made for z
set atom $i y ${y0}
set atom 160 y ${y0}
set atom 160 y 12.636
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 159 z ${z0}
set atom 159 z 14.742
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 159 y ${y0}
set atom 159 y 12.636
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 83

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 83

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 257

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 258 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal 17.6079472999573
variable 	yupdate equal ${ynew}
variable 	yupdate equal 20.6268203830719

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 257 z ${zupdate}
set             atom 257 z 17.6079472999573
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 257 y ${yupdate}
set             atom 257 y 20.6268203830719
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 258 z ${zupdate}
set             atom 258 z 17.6079472999573
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 258 y ${yupdate}
set             atom 258 y 20.6268203830719
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5847.41919552655 -5866.42821977498
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      98            0   -5853.6036            0   -5853.6036    101147.88 
      99            0   -5853.6036            0   -5853.6036    101147.88 
Loop time of 0.0135241 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.406218588352203
print "$e ${elast}"
-5853.60359522145 -5866.42821977498
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 257 z ${z0}
set atom 257 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 257 y ${y0}
set atom 257 y 21.06
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 258 z ${z0}
set atom 258 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 258 y ${y0}
set atom 258 y 21.06
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 84

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 84

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 162

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 161 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 12.636

variable 	zupdate equal ${znew}
variable 	zupdate equal 16.6374446849823
variable 	yupdate equal ${ynew}
variable 	yupdate equal 12.5700292215347

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 162 z ${zupdate}
set             atom 162 z 16.6374446849823
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 162 y ${yupdate}
set             atom 162 y 12.5700292215347
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 161 z ${zupdate}
set             atom 161 z 16.6374446849823
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 161 y ${yupdate}
set             atom 161 y 12.5700292215347
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5853.60359522145 -5866.42821977498
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
      99            0   -5865.8692            0   -5865.8692    85869.387 
     100            0   -5865.8692            0   -5865.8692    85869.387 
Loop time of 0.0134101 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.812774538993835
print "$e ${elast}"
-5865.86924140283 -5866.42821977498
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5865.86924140283
variable naccept equal ${increment}
variable naccept equal 16
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     100            0   -5865.8692            0   -5865.8692    85869.387 
     101            0   -5865.8692            0   -5865.8692    85869.387 
Loop time of 0.0130861 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 85

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 85

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 79

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 80 
variable        z0 equal ${zi}
variable        z0 equal 6.318
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 6.42033533382416
variable 	yupdate equal ${ynew}
variable 	yupdate equal 7.11372999477386

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 79 z ${zupdate}
set             atom 79 z 6.42033533382416
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 79 y ${yupdate}
set             atom 79 y 7.11372999477386
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 80 z ${zupdate}
set             atom 80 z 6.42033533382416
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 80 y ${yupdate}
set             atom 80 y 7.11372999477386
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5865.86924140283 -5865.86924140283
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     101            0   -5849.9908            0   -5849.9908    104347.91 
     102            0   -5849.9908            0   -5849.9908    104347.91 
Loop time of 0.0130129 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.638435006141663
print "$e ${elast}"
-5849.99080038182 -5865.86924140283
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 79 z ${z0}
set atom 79 z 6.318
  1 settings made for z
set atom $i y ${y0}
set atom 79 y ${y0}
set atom 79 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 80 z ${z0}
set atom 80 z 6.318
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 80 y ${y0}
set atom 80 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 86

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 86

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 16

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 15 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 15.1854005022049
variable 	yupdate equal ${ynew}
variable 	yupdate equal -0.619987487792969

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 16 z ${zupdate}
set             atom 16 z 15.1854005022049
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 16 y ${yupdate}
set             atom 16 y -0.619987487792969
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 15 z ${zupdate}
set             atom 15 z 15.1854005022049
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 15 y ${yupdate}
set             atom 15 y -0.619987487792969
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5849.99080038182 -5865.86924140283
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     102            0   -5857.8847            0   -5857.8847    97161.893 
     103            0   -5857.8847            0   -5857.8847    97161.893 
Loop time of 0.0130348 on 1 procs for 1 steps with 288 atoms

69.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.0139994621276855
print "$e ${elast}"
-5857.88469979954 -5865.86924140283
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5857.88469979954
variable naccept equal ${increment}
variable naccept equal 17
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     103            0   -5857.8847            0   -5857.8847    97161.893 
     104            0   -5857.8847            0   -5857.8847    97161.893 
Loop time of 0.0130351 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 87

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 87

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 1

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 2 
variable        z0 equal ${zi}
variable        z0 equal 0
variable        y0 equal ${yi}
variable        y0 equal 0

variable 	zupdate equal ${znew}
variable 	zupdate equal 0.236309289932251
variable 	yupdate equal ${ynew}
variable 	yupdate equal -0.0234479904174805

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 1 z ${zupdate}
set             atom 1 z 0.236309289932251
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 1 y ${yupdate}
set             atom 1 y -0.0234479904174805
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 2 z ${zupdate}
set             atom 2 z 0.236309289932251
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 2 y ${yupdate}
set             atom 2 y -0.0234479904174805
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5857.88469979954 -5857.88469979954
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     104            0   -5857.4086            0   -5857.4086    98547.794 
     105            0   -5857.4086            0   -5857.4086    98547.794 
Loop time of 0.0138738 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.0694502592086792
print "$e ${elast}"
-5857.40856990305 -5857.88469979954
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5857.40856990305
variable naccept equal ${increment}
variable naccept equal 18
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     105            0   -5857.4086            0   -5857.4086    98547.794 
     106            0   -5857.4086            0   -5857.4086    98547.794 
Loop time of 0.0134211 on 1 procs for 1 steps with 288 atoms

100.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 88

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 88

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 163

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 164 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 12.636

variable 	zupdate equal ${znew}
variable 	zupdate equal 18.8989490308762
variable 	yupdate equal ${ynew}
variable 	yupdate equal 12.2427506074905

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 163 z ${zupdate}
set             atom 163 z 18.8989490308762
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 163 y ${yupdate}
set             atom 163 y 12.2427506074905
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 164 z ${zupdate}
set             atom 164 z 18.8989490308762
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 164 y ${yupdate}
set             atom 164 y 12.2427506074905
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5857.40856990305 -5857.40856990305
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     106            0   -5855.2811            0   -5855.2811    101992.02 
     107            0   -5855.2811            0   -5855.2811    101992.02 
Loop time of 0.0134201 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.264070987701416
print "$e ${elast}"
-5855.28114929638 -5857.40856990305
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5855.28114929638
variable naccept equal ${increment}
variable naccept equal 19
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     107            0   -5855.2811            0   -5855.2811    101992.02 
     108            0   -5855.2811            0   -5855.2811    101992.02 
Loop time of 0.0132251 on 1 procs for 1 steps with 288 atoms

99.4% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 89

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 89

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 110

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 109 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 11.9377508983612
variable 	yupdate equal ${ynew}
variable 	yupdate equal 7.50483021640778

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 110 z ${zupdate}
set             atom 110 z 11.9377508983612
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 110 y ${yupdate}
set             atom 110 y 7.50483021640778
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 109 z ${zupdate}
set             atom 109 z 11.9377508983612
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 109 y ${yupdate}
set             atom 109 y 7.50483021640778
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5855.28114929638 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     108            0    -5834.313            0    -5834.313    126059.27 
     109            0    -5834.313            0    -5834.313    126059.27 
Loop time of 0.0129659 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.301851212978363
print "$e ${elast}"
-5834.31302635521 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 110 z ${z0}
set atom 110 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 110 y ${y0}
set atom 110 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 109 z ${z0}
set atom 109 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 109 y ${y0}
set atom 109 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 90

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 90

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 244

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 243 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal 2.68757289028168
variable 	yupdate equal ${ynew}
variable 	yupdate equal 21.7060874080658

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 244 z ${zupdate}
set             atom 244 z 2.68757289028168
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 244 y ${yupdate}
set             atom 244 y 21.7060874080658
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 243 z ${zupdate}
set             atom 243 z 2.68757289028168
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 243 y ${yupdate}
set             atom 243 y 21.7060874080658
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5834.31302635521 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     109            0    -5837.491            0    -5837.491    125372.61 
     110            0    -5837.491            0    -5837.491    125372.61 
Loop time of 0.013021 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.736481368541718
print "$e ${elast}"
-5837.49102610003 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 244 z ${z0}
set atom 244 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 244 y ${y0}
set atom 244 y 21.06
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 243 z ${z0}
set atom 243 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 243 y ${y0}
set atom 243 y 21.06
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 91

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 91

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 132

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 131 
variable        z0 equal ${zi}
variable        z0 equal 10.53
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 10.8181300449371
variable 	yupdate equal ${ynew}
variable 	yupdate equal 9.62808659553528

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 132 z ${zupdate}
set             atom 132 z 10.8181300449371
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 132 y ${yupdate}
set             atom 132 y 9.62808659553528
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 131 z ${zupdate}
set             atom 131 z 10.8181300449371
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 131 y ${yupdate}
set             atom 131 y 9.62808659553528
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5837.49102610003 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     110            0   -5832.3018            0   -5832.3018    126804.21 
     111            0   -5832.3018            0   -5832.3018    126804.21 
Loop time of 0.013216 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.530712962150574
print "$e ${elast}"
-5832.30178686165 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 132 z ${z0}
set atom 132 z 10.53
  1 settings made for z
set atom $i y ${y0}
set atom 132 y ${y0}
set atom 132 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 131 z ${z0}
set atom 131 z 10.53
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 131 y ${y0}
set atom 131 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 92

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 92

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 58

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 57 
variable        z0 equal ${zi}
variable        z0 equal 8.424
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 9.29689893627167
variable 	yupdate equal ${ynew}
variable 	yupdate equal 4.73812566947937

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 58 z ${zupdate}
set             atom 58 z 9.29689893627167
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 58 y ${yupdate}
set             atom 58 y 4.73812566947937
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 57 z ${zupdate}
set             atom 57 z 9.29689893627167
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 57 y ${yupdate}
set             atom 57 y 4.73812566947937
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5832.30178686165 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     111            0   -5836.4202            0   -5836.4202    123757.25 
     112            0   -5836.4202            0   -5836.4202    123757.25 
Loop time of 0.0135829 on 1 procs for 1 steps with 288 atoms

100.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.203407824039459
print "$e ${elast}"
-5836.42020119027 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 58 z ${z0}
set atom 58 z 8.424
  1 settings made for z
set atom $i y ${y0}
set atom 58 y ${y0}
set atom 58 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 57 z ${z0}
set atom 57 z 8.424
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 57 y ${y0}
set atom 57 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 93

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 93

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 236

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 235 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal 18.2861304321289
variable 	yupdate equal ${ynew}
variable 	yupdate equal 18.7233749666214

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 236 z ${zupdate}
set             atom 236 z 18.2861304321289
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 236 y ${yupdate}
set             atom 236 y 18.7233749666214
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 235 z ${zupdate}
set             atom 235 z 18.2861304321289
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 235 y ${yupdate}
set             atom 235 y 18.7233749666214
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5836.42020119027 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     112            0   -5846.2508            0   -5846.2508    113926.56 
     113            0   -5846.2508            0   -5846.2508    113926.56 
Loop time of 0.0134749 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.5643230676651
print "$e ${elast}"
-5846.25082587709 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 236 z ${z0}
set atom 236 z 18.954
  1 settings made for z
set atom $i y ${y0}
set atom 236 y ${y0}
set atom 236 y 18.954
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 235 z ${z0}
set atom 235 z 18.954
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 235 y ${y0}
set atom 235 y 18.954
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 94

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 94

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 123

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 124 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 1.37164633846283
variable 	yupdate equal ${ynew}
variable 	yupdate equal 9.93000891685486

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 123 z ${zupdate}
set             atom 123 z 1.37164633846283
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 123 y ${yupdate}
set             atom 123 y 9.93000891685486
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 124 z ${zupdate}
set             atom 124 z 1.37164633846283
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 124 y ${yupdate}
set             atom 124 y 9.93000891685486
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5846.25082587709 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     113            0   -5844.0172            0   -5844.0172    113389.36 
     114            0   -5844.0172            0   -5844.0172    113389.36 
Loop time of 0.0132549 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.941107988357544
print "$e ${elast}"
-5844.0171934606 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 123 z ${z0}
set atom 123 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 123 y ${y0}
set atom 123 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 124 z ${z0}
set atom 124 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 124 y ${y0}
set atom 124 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 95

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 95

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 129

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 130 
variable        z0 equal ${zi}
variable        z0 equal 8.424
variable        y0 equal ${yi}
variable        y0 equal 10.53

variable 	zupdate equal ${znew}
variable 	zupdate equal 7.64166090393066
variable 	yupdate equal ${ynew}
variable 	yupdate equal 11.2331434774399

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 129 z ${zupdate}
set             atom 129 z 7.64166090393066
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 129 y ${yupdate}
set             atom 129 y 11.2331434774399
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 130 z ${zupdate}
set             atom 130 z 7.64166090393066
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 130 y ${yupdate}
set             atom 130 y 11.2331434774399
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5844.0171934606 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     114            0   -5839.8317            0   -5839.8317    121205.14 
     115            0   -5839.8317            0   -5839.8317    121205.14 
Loop time of 0.0130332 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.302249729633331
print "$e ${elast}"
-5839.83165682907 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 129 z ${z0}
set atom 129 z 8.424
  1 settings made for z
set atom $i y ${y0}
set atom 129 y ${y0}
set atom 129 y 10.53
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 130 z ${z0}
set atom 130 z 8.424
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 130 y ${y0}
set atom 130 y 10.53
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 96

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 96

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 114

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 113 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 17.5286311607361
variable 	yupdate equal ${ynew}
variable 	yupdate equal 8.91612789535522

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 114 z ${zupdate}
set             atom 114 z 17.5286311607361
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 114 y ${yupdate}
set             atom 114 y 8.91612789535522
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 113 z ${zupdate}
set             atom 113 z 17.5286311607361
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 113 y ${yupdate}
set             atom 113 y 8.91612789535522
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5839.83165682907 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     115            0   -5845.1607            0   -5845.1607    114847.45 
     116            0   -5845.1607            0   -5845.1607    114847.45 
Loop time of 0.0129991 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.636553764343262
print "$e ${elast}"
-5845.16073302619 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 114 z ${z0}
set atom 114 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 114 y ${y0}
set atom 114 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 113 z ${z0}
set atom 113 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 113 y ${y0}
set atom 113 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 97

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 97

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 223

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 224 
variable        z0 equal ${zi}
variable        z0 equal 6.318
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal 5.4015428237915
variable 	yupdate equal ${ynew}
variable 	yupdate equal 19.4128904380798

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 223 z ${zupdate}
set             atom 223 z 5.4015428237915
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 223 y ${yupdate}
set             atom 223 y 19.4128904380798
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 224 z ${zupdate}
set             atom 224 z 5.4015428237915
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 224 y ${yupdate}
set             atom 224 y 19.4128904380798
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5845.16073302619 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     116            0   -5836.7475            0   -5836.7475    124648.92 
     117            0   -5836.7475            0   -5836.7475    124648.92 
Loop time of 0.01371 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.724600315093994
print "$e ${elast}"
-5836.74749042625 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 223 z ${z0}
set atom 223 z 6.318
  1 settings made for z
set atom $i y ${y0}
set atom 223 y ${y0}
set atom 223 y 18.954
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 224 z ${z0}
set atom 224 z 6.318
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 224 y ${y0}
set atom 224 y 18.954
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 98

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 98

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 176

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 175 
variable        z0 equal ${zi}
variable        z0 equal 6.318
variable        y0 equal ${yi}
variable        y0 equal 14.742

variable 	zupdate equal ${znew}
variable 	zupdate equal 6.00643805789947
variable 	yupdate equal ${ynew}
variable 	yupdate equal 15.356354968071

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 176 z ${zupdate}
set             atom 176 z 6.00643805789947
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 176 y ${yupdate}
set             atom 176 y 15.356354968071
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 175 z ${zupdate}
set             atom 175 z 6.00643805789947
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 175 y ${yupdate}
set             atom 175 y 15.356354968071
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5836.74749042625 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     117            0   -5848.0065            0   -5848.0065    112193.68 
     118            0   -5848.0065            0   -5848.0065    112193.68 
Loop time of 0.0135081 on 1 procs for 1 steps with 288 atoms

100.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.641865849494934
print "$e ${elast}"
-5848.00646253412 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 176 z ${z0}
set atom 176 z 6.318
  1 settings made for z
set atom $i y ${y0}
set atom 176 y ${y0}
set atom 176 y 14.742
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 175 z ${z0}
set atom 175 z 6.318
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 175 y ${y0}
set atom 175 y 14.742
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 99

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 99

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 284

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 283 
variable        z0 equal ${zi}
variable        z0 equal 18.954
variable        y0 equal ${yi}
variable        y0 equal 23.166

variable 	zupdate equal ${znew}
variable 	zupdate equal 19.8728187122345
variable 	yupdate equal ${ynew}
variable 	yupdate equal 23.8240486297607

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 284 z ${zupdate}
set             atom 284 z 19.8728187122345
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 284 y ${yupdate}
set             atom 284 y 23.8240486297607
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 283 z ${zupdate}
set             atom 283 z 19.8728187122345
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 283 y ${yupdate}
set             atom 283 y 23.8240486297607
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5848.00646253412 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     118            0   -5817.8671            0   -5817.8671    142171.67 
     119            0   -5817.8671            0   -5817.8671    142171.67 
Loop time of 0.013463 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.947638332843781
print "$e ${elast}"
-5817.86710897709 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 284 z ${z0}
set atom 284 z 18.954
  1 settings made for z
set atom $i y ${y0}
set atom 284 y ${y0}
set atom 284 y 23.166
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 283 z ${z0}
set atom 283 z 18.954
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 283 y ${y0}
set atom 283 y 23.166
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 100

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 100

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 62

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 61 
variable        z0 equal ${zi}
variable        z0 equal 12.636
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 12.8250897750854
variable 	yupdate equal ${ynew}
variable 	yupdate equal 4.71466742706299

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 62 z ${zupdate}
set             atom 62 z 12.8250897750854
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 62 y ${yupdate}
set             atom 62 y 4.71466742706299
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 61 z ${zupdate}
set             atom 61 z 12.8250897750854
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 61 y ${yupdate}
set             atom 61 y 4.71466742706299
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5817.86710897709 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     119            0   -5851.1468            0   -5851.1468    108297.63 
     120            0   -5851.1468            0   -5851.1468    108297.63 
Loop time of 0.0130248 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.68437796831131
print "$e ${elast}"
-5851.14681125996 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 62 z ${z0}
set atom 62 z 12.636
  1 settings made for z
set atom $i y ${y0}
set atom 62 y ${y0}
set atom 62 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 61 z ${z0}
set atom 61 z 12.636
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 61 y ${y0}
set atom 61 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 101

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 101

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 95

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 96 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 22.6600869808197
variable 	yupdate equal ${ynew}
variable 	yupdate equal 5.54962066936493

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 95 z ${zupdate}
set             atom 95 z 22.6600869808197
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 95 y ${yupdate}
set             atom 95 y 5.54962066936493
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 96 z ${zupdate}
set             atom 96 z 22.6600869808197
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 96 y ${yupdate}
set             atom 96 y 5.54962066936493
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5851.14681125996 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     120            0   -5841.9738            0   -5841.9738    118848.54 
     121            0   -5841.9738            0   -5841.9738    118848.54 
Loop time of 0.0130332 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.238723456859589
print "$e ${elast}"
-5841.97377429434 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 95 z ${z0}
set atom 95 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 95 y ${y0}
set atom 95 y 6.318
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 96 z ${z0}
set atom 96 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 96 y ${y0}
set atom 96 y 6.318
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 102

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 102

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 190

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 189 
variable        z0 equal ${zi}
variable        z0 equal 21.2055178260803
variable        y0 equal ${yi}
variable        y0 equal 14.6059351129532

variable 	zupdate equal ${znew}
variable 	zupdate equal 21.0183641290664
variable 	yupdate equal ${ynew}
variable 	yupdate equal 14.0072051448822

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 190 z ${zupdate}
set             atom 190 z 21.0183641290664
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 190 y ${yupdate}
set             atom 190 y 14.0072051448822
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 189 z ${zupdate}
set             atom 189 z 21.0183641290664
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 189 y ${yupdate}
set             atom 189 y 14.0072051448822
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5841.97377429434 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     121            0   -5844.2322            0   -5844.2322    115943.99 
     122            0   -5844.2322            0   -5844.2322    115943.99 
Loop time of 0.013042 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.755720674991608
print "$e ${elast}"
-5844.23222617654 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 190 z ${z0}
set atom 190 z 21.2055178260803
  1 settings made for z
set atom $i y ${y0}
set atom 190 y ${y0}
set atom 190 y 14.6059351129532
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 189 z ${z0}
set atom 189 z 21.2055178260803
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 189 y ${y0}
set atom 189 y 14.6059351129532
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 103

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 103

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 244

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 243 
variable        z0 equal ${zi}
variable        z0 equal 2.106
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal 1.13486533737183
variable 	yupdate equal ${ynew}
variable 	yupdate equal 20.3512486791611

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 244 z ${zupdate}
set             atom 244 z 1.13486533737183
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 244 y ${yupdate}
set             atom 244 y 20.3512486791611
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 243 z ${zupdate}
set             atom 243 z 1.13486533737183
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 243 y ${yupdate}
set             atom 243 y 20.3512486791611
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5844.23222617654 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     122            0   -5838.0852            0   -5838.0852    122729.38 
     123            0   -5838.0852            0   -5838.0852    122729.38 
Loop time of 0.0139349 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.15634298324585
print "$e ${elast}"
-5838.08518019746 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 244 z ${z0}
set atom 244 z 2.106
  1 settings made for z
set atom $i y ${y0}
set atom 244 y ${y0}
set atom 244 y 21.06
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 243 z ${z0}
set atom 243 z 2.106
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 243 y ${y0}
set atom 243 y 21.06
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 104

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 104

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 64

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 63 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 4.212

variable 	zupdate equal ${znew}
variable 	zupdate equal 15.3868390483856
variable 	yupdate equal ${ynew}
variable 	yupdate equal 4.79505072784424

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 64 z ${zupdate}
set             atom 64 z 15.3868390483856
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 64 y ${yupdate}
set             atom 64 y 4.79505072784424
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 63 z ${zupdate}
set             atom 63 z 15.3868390483856
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 63 y ${yupdate}
set             atom 63 y 4.79505072784424
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5838.08518019746 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     123            0    -5843.926            0    -5843.926    116395.96 
     124            0    -5843.926            0    -5843.926    116395.96 
Loop time of 0.0134799 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.24085259437561
print "$e ${elast}"
-5843.92595064665 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 64 z ${z0}
set atom 64 z 14.742
  1 settings made for z
set atom $i y ${y0}
set atom 64 y ${y0}
set atom 64 y 4.212
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 63 z ${z0}
set atom 63 z 14.742
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 63 y ${y0}
set atom 63 y 4.212
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 105

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 105

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 218

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 217 
variable        z0 equal ${zi}
variable        z0 equal 24.6565287561417
variable        y0 equal ${yi}
variable        y0 equal 18.9453778305054

variable 	zupdate equal ${znew}
variable 	zupdate equal 25.3190916032791
variable 	yupdate equal ${ynew}
variable 	yupdate equal 18.5605349578858

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 218 z ${zupdate}
set             atom 218 z 25.3190916032791
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 218 y ${yupdate}
set             atom 218 y 18.5605349578858
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 217 z ${zupdate}
set             atom 217 z 25.3190916032791
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 217 y ${yupdate}
set             atom 217 y 18.5605349578858
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5843.92595064665 -5855.28114929638
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     124            0   -5860.1887            0   -5860.1887    95806.354 
     125            0   -5860.1887            0   -5860.1887    95806.354 
Loop time of 0.0131299 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.101096570491791
print "$e ${elast}"
-5860.18865596094 -5855.28114929638
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5860.18865596094
variable naccept equal ${increment}
variable naccept equal 20
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     125            0   -5860.1887            0   -5860.1887    95806.354 
     126            0   -5860.1887            0   -5860.1887    95806.354 
Loop time of 0.0130169 on 1 procs for 1 steps with 288 atoms

100.2% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 106

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 106

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 225

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 226 
variable        z0 equal ${zi}
variable        z0 equal 8.424
variable        y0 equal ${yi}
variable        y0 equal 18.954

variable 	zupdate equal ${znew}
variable 	zupdate equal 9.28637382888794
variable 	yupdate equal ${ynew}
variable 	yupdate equal 18.6137111225128

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 225 z ${zupdate}
set             atom 225 z 9.28637382888794
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 225 y ${yupdate}
set             atom 225 y 18.6137111225128
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 226 z ${zupdate}
set             atom 226 z 9.28637382888794
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 226 y ${yupdate}
set             atom 226 y 18.6137111225128
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5860.18865596094 -5860.18865596094
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     126            0   -5843.2753            0   -5843.2753    116529.44 
     127            0   -5843.2753            0   -5843.2753    116529.44 
Loop time of 0.0130329 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.0346361994743347
print "$e ${elast}"
-5843.27534898665 -5860.18865596094
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 225 z ${z0}
set atom 225 z 8.424
  1 settings made for z
set atom $i y ${y0}
set atom 225 y ${y0}
set atom 225 y 18.954
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 226 z ${z0}
set atom 226 z 8.424
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 226 y ${y0}
set atom 226 y 18.954
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 107

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 107

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 203

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 204 
variable        z0 equal ${zi}
variable        z0 equal 10.5909146356583
variable        y0 equal ${yi}
variable        y0 equal 16.4981268148422

variable 	zupdate equal ${znew}
variable 	zupdate equal 11.0288428354264
variable 	yupdate equal ${ynew}
variable 	yupdate equal 15.8793507318496

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 203 z ${zupdate}
set             atom 203 z 11.0288428354264
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 203 y ${yupdate}
set             atom 203 y 15.8793507318496
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 204 z ${zupdate}
set             atom 204 z 11.0288428354264
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 204 y ${yupdate}
set             atom 204 y 15.8793507318496
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5843.27534898665 -5860.18865596094
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     127            0   -5836.1061            0   -5836.1061    120624.78 
     128            0   -5836.1061            0   -5836.1061    120624.78 
Loop time of 0.0130601 on 1 procs for 1 steps with 288 atoms

99.7% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.180666446685791
print "$e ${elast}"
-5836.10608609928 -5860.18865596094
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 203 z ${z0}
set atom 203 z 10.5909146356583
  1 settings made for z
set atom $i y ${y0}
set atom 203 y ${y0}
set atom 203 y 16.4981268148422
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 204 z ${z0}
set atom 204 z 10.5909146356583
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 204 y ${y0}
set atom 204 y 16.4981268148422
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 108

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 108

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 185

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 186 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 14.742

variable 	zupdate equal ${znew}
variable 	zupdate equal 17.8196470241547
variable 	yupdate equal ${ynew}
variable 	yupdate equal 15.532314912796

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 185 z ${zupdate}
set             atom 185 z 17.8196470241547
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 185 y ${yupdate}
set             atom 185 y 15.532314912796
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 186 z ${zupdate}
set             atom 186 z 17.8196470241547
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 186 y ${yupdate}
set             atom 186 y 15.532314912796
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5836.10608609928 -5860.18865596094
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     128            0   -5836.0115            0   -5836.0115    123184.72 
     129            0   -5836.0115            0   -5836.0115    123184.72 
Loop time of 0.013593 on 1 procs for 1 steps with 288 atoms

99.5% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.266894161701202
print "$e ${elast}"
-5836.01151895447 -5860.18865596094
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 185 z ${z0}
set atom 185 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 185 y ${y0}
set atom 185 y 14.742
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 186 z ${z0}
set atom 186 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 186 y ${y0}
set atom 186 y 14.742
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 109

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 109

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 40

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 39 
variable        z0 equal ${zi}
variable        z0 equal 14.742
variable        y0 equal ${yi}
variable        y0 equal 2.106

variable 	zupdate equal ${znew}
variable 	zupdate equal 14.5618711872101
variable 	yupdate equal ${ynew}
variable 	yupdate equal 1.55407374477386

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 40 z ${zupdate}
set             atom 40 z 14.5618711872101
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 40 y ${yupdate}
set             atom 40 y 1.55407374477386
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 39 z ${zupdate}
set             atom 39 z 14.5618711872101
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 39 y ${yupdate}
set             atom 39 y 1.55407374477386
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5836.01151895447 -5860.18865596094
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     129            0    -5857.967            0    -5857.967    95194.532 
     130            0    -5857.967            0    -5857.967    95194.532 
Loop time of 0.0134602 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.158200800418854
print "$e ${elast}"
-5857.96699689681 -5860.18865596094
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5857.96699689681
variable naccept equal ${increment}
variable naccept equal 21
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     130            0    -5857.967            0    -5857.967    95194.532 
     131            0    -5857.967            0    -5857.967    95194.532 
Loop time of 0.0131159 on 1 procs for 1 steps with 288 atoms

99.6% CPU use with 1 MPI tasks x 1 OpenMP threads
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 110

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 110

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 67

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${upperi} 
variable layeri equal 68 
variable        z0 equal ${zi}
variable        z0 equal 18.7379710712433
variable        y0 equal ${yi}
variable        y0 equal 4.36123202991486

variable 	zupdate equal ${znew}
variable 	zupdate equal 19.1090410985947
variable 	yupdate equal ${ynew}
variable 	yupdate equal 3.48147700977326

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 67 z ${zupdate}
set             atom 67 z 19.1090410985947
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 67 y ${yupdate}
set             atom 67 y 3.48147700977326
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 68 z ${zupdate}
set             atom 68 z 19.1090410985947
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 68 y ${yupdate}
set             atom 68 y 3.48147700977326
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5857.96699689681 -5857.96699689681
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     131            0   -5846.2873            0   -5846.2873     108792.6 
     132            0   -5846.2873            0   -5846.2873     108792.6 
Loop time of 0.012974 on 1 procs for 1 steps with 288 atoms

100.1% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.190449893474579
print "$e ${elast}"
-5846.28732431836 -5857.96699689681
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 67 z ${z0}
set atom 67 z 18.7379710712433
  1 settings made for z
set atom $i y ${y0}
set atom 67 y ${y0}
set atom 67 y 4.36123202991486
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 68 z ${z0}
set atom 68 z 18.7379710712433
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 68 y ${y0}
set atom 68 y 4.36123202991486
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 111

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 111

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 264

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 263 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 21.06

variable 	zupdate equal ${znew}
variable 	zupdate equal 22.7057856235504
variable 	yupdate equal ${ynew}
variable 	yupdate equal 20.4070001220703

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 264 z ${zupdate}
set             atom 264 z 22.7057856235504
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 264 y ${yupdate}
set             atom 264 y 20.4070001220703
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 263 z ${zupdate}
set             atom 263 z 22.7057856235504
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 263 y ${yupdate}
set             atom 263 y 20.4070001220703
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5846.28732431836 -5857.96699689681
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     132            0   -5848.8305            0   -5848.8305    107655.38 
     133            0   -5848.8305            0   -5848.8305    107655.38 
Loop time of 0.012924 on 1 procs for 1 steps with 288 atoms

99.7% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.36866283416748
print "$e ${elast}"
-5848.83046469215 -5857.96699689681
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 264 z ${z0}
set atom 264 z 23.166
  1 settings made for z
set atom $i y ${y0}
set atom 264 y ${y0}
set atom 264 y 21.06
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 263 z ${z0}
set atom 263 z 23.166
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 263 y ${y0}
set atom 263 y 21.06
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 112

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 112

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 114

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 113 
variable        z0 equal ${zi}
variable        z0 equal 16.848
variable        y0 equal ${yi}
variable        y0 equal 8.424

variable 	zupdate equal ${znew}
variable 	zupdate equal 16.4161859254837
variable 	yupdate equal ${ynew}
variable 	yupdate equal 7.51353189849853

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 114 z ${zupdate}
set             atom 114 z 16.4161859254837
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 114 y ${yupdate}
set             atom 114 y 7.51353189849853
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 113 z ${zupdate}
set             atom 113 z 16.4161859254837
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 113 y ${yupdate}
set             atom 113 y 7.51353189849853
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5848.83046469215 -5857.96699689681
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     133            0   -5817.9051            0   -5817.9051    133656.53 
     134            0   -5817.9051            0   -5817.9051    133656.53 
Loop time of 0.013006 on 1 procs for 1 steps with 288 atoms

99.7% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.362793803215027
print "$e ${elast}"
-5817.90513825917 -5857.96699689681
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
set atom $i z ${z0}
set atom 114 z ${z0}
set atom 114 z 16.848
  1 settings made for z
set atom $i y ${y0}
set atom 114 y ${y0}
set atom 114 y 8.424
  1 settings made for y
set atom ${layeri} z ${z0}
set atom 113 z ${z0}
set atom 113 z 16.848
  1 settings made for z
set atom ${layeri} y ${y0}
set atom 113 y ${y0}
set atom 113 y 8.424
  1 settings made for y
#run 1 post no
#--------------------------------------------------------------
variable nmoves equal ${nmincrement}
variable nmoves equal 113

variable 	disordercounter equal ${disincrement}
variable 	disordercounter equal 113

# ------- To stop when sufficiently disordered, reset counters -------------

if		"${disordercounter} == ${disorder}" then 		"variable kT equal $T" 		"variable dismoves equal ${nmoves}" 		"variable disaccept equal ${naccept}"
#--------------------------------------------------------------------------

if		"${disordercounter} > ${disorder}" then 		'variable totnmoves equal "v_nmoves - v_dismoves"' 		'variable totnaccept equal "v_naccept - v_disaccept"' 		'variable ratio equal "100*v_totnaccept/v_totnmoves"' 		'print "moves = ${totnmoves} Ratio of accepted/Total = ${ratio} %"'
next 		iter_sitemax
jump 		SELF loop_allsites
variable iter_sitemax loop 288

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 96

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 95 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 22.9404896411896
variable 	yupdate equal ${ynew}
variable 	yupdate equal 6.39647499847412

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 96 z ${zupdate}
set             atom 96 z 22.9404896411896
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 96 y ${yupdate}
set             atom 96 y 6.39647499847412
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 95 z ${zupdate}
set             atom 95 z 22.9404896411896
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 95 y ${yupdate}
set             atom 95 y 6.39647499847412
  1 settings made for y
#--------------------------------------------------------------
print "$e ${elast}"
-5817.90513825917 -5857.96699689681
#variable epe equal findpe
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     134            0   -5857.2736            0   -5857.2736    96347.238 
     135            0   -5857.2736            0   -5857.2736    96347.238 
Loop time of 0.0139279 on 1 procs for 1 steps with 288 atoms

100.0% CPU use with 1 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.408713102340698
print "$e ${elast}"
-5857.27360376569 -5857.96699689681
if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}" 		  "run 1 post no"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
variable elast equal $e
variable elast equal -5857.27360376569
variable naccept equal ${increment}
variable naccept equal 22
run 1 post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10933 4608
Memory usage per processor = 5.16842 Mbytes
Step Temp E_pair E_mol TotEng Press 
     135            0   -5857.2736            0   -5857.2736    96347.238 
     136            0   -5857.2736            0   -5857.2736    96347.238 
Loop time of 0.0134671 on 1 procs for 1 steps with 288 atoms

99.3% CPU use with 1 MPI tasks x 1 OpenMP threads
