LAMMPS (1 Jul 2016-ICMS)
WARNING: OMP_NUM_THREADS environment is not set. (../comm.cpp:90)
  using 1 OpenMP thread(s) per MPI task
#---------------------------WELCOME----------------------------
print "Optimise lattice constant of MgO crystal"
Optimise lattice constant of MgO crystal

#--------------------INITIALISATION----------------------------
units metal		#distance in A and energy in eV
atom_style charge	#specifies what properties to associate with atoms

#cell vectors
variable a equal  4.212
atom_modify     map array sort 0 0.0

region box block 0.0 4.212 0.0 25.272 0.0 25.272 units box
boundary p p p  #PBC in x-direction
create_box 2 box  #generate simulation box
Created orthogonal box = (0 0 0) to (4.212 25.272 25.272)
  1 by 1 by 2 MPI processor grid

# set these parameters
# make sure neigh skin > 2*deltamove

#---------------------------- Parameters ----------------------------------------
#Number of montecarlo steps to run for
variable iter_steps loop 1
#number of steps to disorder system (inf temp)
variable disorder equal 500
#number of sites in one Montecarlo step


#Temperature
variable T equal 0.026
#Inf temp for disordering
variable kT equal 500 		#inf T for disorder phase
variable Tdecrease equal v_kT-0.026

variable deltaperturb equal 0.0    #0.2 max size of initial perturbation per dim
variable deltamove equal 1.0    #0.1 max size of MC move in one dimension

variable seed equal 582783
#-------------------------------------------------------------------------------------

#read in coordinates
read_dump testmc.xyz 0 x y z box no add yes format xyz
  orthogonal box = (0 0 0) to (4.212 25.272 25.272)
  0 atoms before read
  288 atoms in snapshot
  0 atoms purged
  0 atoms replaced
  0 atoms trimmed
  288 atoms added
  288 atoms after read

#set up potential
set type 1 charge  2.000000
  144 settings made for charge
set type 2 charge -2.000000
  144 settings made for charge

mass 1 24.305 #specify mass of atoms
mass 2 15.9994 #specify mass of atoms

pair_style hybrid/overlay buck 8.0 coul/long 8.0
pair_coeff 1 2 buck 1284.38000  0.299700  0.000000 8.0
pair_coeff 2 2 buck 9574.95996  0.219200  32.00000 8.0
pair_coeff * * coul/long
kspace_style pppm 1.0e-4
pair_modify table 0

neighbor 2.0 bin
neigh_modify delay 0 every 1 check yes

variable        e equal pe

# run 0 to get energy of perfect lattice
# emin = minimum energy

run             0
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10013 2304
Neighbor list info ...
  2 neighbor list requests
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 10
  ghost atom cutoff = 10
  binsize = 5 -> bins = 1 6 6
Memory usage per processor = 3.67977 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0            0   -5925.6712            0   -5925.6712    802.88982 
Loop time of 2.38419e-06 on 2 procs for 0 steps with 288 atoms

0.0% CPU use with 2 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Kspace  | 0          | 0          | 0          |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0          | 0          | 0          |   0.0 |  0.00
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 2.384e-06  |            |       |100.00

Nlocal:    144 ave 144 max 144 min
Histogram: 2 0 0 0 0 0 0 0 0 0
Nghost:    3321 ave 3321 max 3321 min
Histogram: 2 0 0 0 0 0 0 0 0 0
Neighs:    33120 ave 34560 max 31680 min
Histogram: 1 0 0 0 0 0 0 0 0 1

Total # of neighbors = 66240
Ave neighs/atom = 230
Neighbor list builds = 0
Dangerous builds = 0
variable        emin equal $e
variable        emin equal -5925.67122146437

# -------------------------- setting up system and random displacements -------------
# estart = initial energy

variable        z atom z
variable        y atom y

#variable        z atom z+v_deltaperturb*random(-1.0,1.0,${seed})
#variable        y atom y+v_deltaperturb*random(-1.0,1.0,${seed})

set             group all z v_z
  288 settings made for z
set             group all y v_y
  288 settings made for y
#-------------------------------------------------------------------------------------
dump 1 all custom 1 dumpmc0.026.lammpstrj id type xs ys zs

run             0
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10013 2304
Memory usage per processor = 4.93526 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0            0   -5925.6712            0   -5925.6712    802.88982 
Loop time of 1.90735e-06 on 2 procs for 0 steps with 288 atoms

0.0% CPU use with 2 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Kspace  | 0          | 0          | 0          |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0          | 0          | 0          |   0.0 |  0.00
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 1.907e-06  |            |       |100.00

Nlocal:    144 ave 144 max 144 min
Histogram: 2 0 0 0 0 0 0 0 0 0
Nghost:    3321 ave 3321 max 3321 min
Histogram: 2 0 0 0 0 0 0 0 0 0
Neighs:    33120 ave 34560 max 31680 min
Histogram: 1 0 0 0 0 0 0 0 0 1

Total # of neighbors = 66240
Ave neighs/atom = 230
Neighbor list builds = 0
Dangerous builds = 0

variable        estart equal $e
variable        estart equal -5925.67122146437
variable        elast equal $e
variable        elast equal -5925.67122146437

#-------------------- loop over Monte Carlo moves ----------------------------
#counters
variable        naccept equal 0
variable        increment equal v_naccept+1
variable 	nmoves equal 0.0
variable 	nmincrement equal v_nmoves+1
variable 	disordercounter equal 0
variable 	disincrement equal v_disordercounter+1
variable 	dismoves equal 0

variable        irandom equal floor(atoms*random(0.0,1.0,${seed})+1)
variable        irandom equal floor(atoms*random(0.0,1.0,582783)+1)
variable        rn equal random(0.0,1.0,${seed})
variable        rn equal random(0.0,1.0,582783)
variable        boltzfactor equal "exp((atoms*(v_elast - v_e)) / v_kT)"

variable        znew equal z[v_i]+v_deltamove*random(-1.0,1.0,${seed})
variable        znew equal z[v_i]+v_deltamove*random(-1.0,1.0,582783)
variable        ynew equal y[v_i]+v_deltamove*random(-1.0,1.0,${seed})
variable        ynew equal y[v_i]+v_deltamove*random(-1.0,1.0,582783)

variable 	atomid equal v_i%2
variable        zi equal z[v_i]
variable        yi equal y[v_i]
variable	layeri equal 0
variable 	loweri equal "v_i - 1"
variable 	upperi equal "v_i + 1"

#--------------------- LOOP -----------------------------------
label           loop
label 		loop_allsites
variable iter_sitemax loop 5000

#print "initial kt ${kT}"
variable        i equal ${irandom}
variable        i equal 192

# 0 for even, take away one to get lower layer
# !=0 for odd, add one to get upper layer
if		"${atomid} == 0" then                   "variable layeri equal ${loweri} "                 else                   "variable layeri equal ${upperi} "
variable layeri equal ${loweri} 
variable layeri equal 191 
variable        z0 equal ${zi}
variable        z0 equal 23.166
variable        y0 equal ${yi}
variable        y0 equal 6.318

variable 	zupdate equal ${znew}
variable 	zupdate equal 23.4677662763596
variable 	yupdate equal ${ynew}
variable 	yupdate equal 5.44353024291992

# ---------------- Update pair of atoms (columns)-----------------
set             atom $i z ${zupdate}
set             atom 192 z ${zupdate}
set             atom 192 z 23.4677662763596
  1 settings made for z
set             atom $i y ${yupdate}
set             atom 192 y ${yupdate}
set             atom 192 y 5.44353024291992
  1 settings made for y

set             atom ${layeri} z ${zupdate}
set             atom 191 z ${zupdate}
set             atom 191 z 23.4677662763596
  1 settings made for z
set             atom ${layeri} y ${yupdate}
set             atom 191 y ${yupdate}
set             atom 191 y 5.44353024291992
  1 settings made for y
#--------------------------------------------------------------
#variable epe equal findpe
run 0 pre yes post no
WARNING: No fixes defined, atoms won't move (../verlet.cpp:55)
PPPM initialization ...
WARNING: Using polynomial approximation for long-range coulomb (../kspace.cpp:316)
  G vector (1/distance) = 0.384915
  grid = 8 24 24
  stencil order = 5
  estimated absolute RMS force accuracy = 0.00143553
  estimated relative force accuracy = 9.96919e-05
  using double precision FFTs
  3d grid and FFT values/proc = 10013 2304
Memory usage per processor = 4.93526 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0            0         -nan            0         -nan         -nan 
Loop time of 2.6226e-06 on 2 procs for 0 steps with 288 atoms

0.0% CPU use with 2 MPI tasks x 1 OpenMP threads
#compute findpe all pe
#print "${epe}"
#--------------------- Energy check ------------------------
variable 	rand equal ${rn}
variable 	rand equal 0.842021644115448

if              "$e <= ${elast}" then                   "variable elast equal $e"                   "variable naccept equal ${increment}"                 elif "${rand} <= ${boltzfactor}"                   "variable elast equal $e"                   "variable naccept equal ${increment}"                 else                   "set atom $i z ${z0}"                   "set atom $i y ${y0}"                   "set atom ${layeri} z ${z0}"                   "set atom ${layeri} y ${y0}"
ERROR: Invalid Boolean syntax in if command (../variable.cpp:4601)
