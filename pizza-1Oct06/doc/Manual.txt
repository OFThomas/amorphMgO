"Pizza.py WWW Site"_pws - "Pizza.py Documentation"_pd - "Pizza.py Tools"_pc :c

:link(pws,http://www.cs.sandia.gov/~sjplimp/pizza.html)
:link(pd,Manual.html)
:link(pc,Section_tools.html)

:line

<H1></H1>

Pizza.py Documentation :c,h3

(1 Oct 2006 version of Pizza.py) :c

Pizza.py is a loosely integrated collection of tools written in
Python, many of which provide pre- and post-processing capability for
the "LAMMPS"_lammps molecular dynamics and "ChemCell"_cccell cell
simulator packages.  There are tools to create input files, convert
between file formats, process log and dump files, create plots, and
visualize and animate simulation snapshots.

The name Pizza.py is meant to evoke the aroma of a collection of
"toppings" that the user can combine in different ways on a "crust" of
basic functionality, with Python as the "cheese" that glues everything
together.

The maintainer of Pizza.py is "Steve
Plimpton"_http://www.cs.sandia.gov/~sjplimp at "Sandia National
Laboratories"_sandia, a US Department of Energy ("DOE"_doe)
laboratory.  Many of the tools were written by Matt Jones, a BYU
student who spent a summer at Sandia.  The "Pizza.py WWW Site"_pws at
www.cs.sandia.gov/~sjplimp/pizza.html has more information about
Pizza.py and its uses.

:link(sandia,http://www.sandia.gov)
:link(sjp,http://www.cs.sandia.gov/~sjplimp)
:link(doe,http://www.doe.gov)
:link(lammps,http://www.cs.sandia.gov/~sjplimp/lammps.html)
:link(ccell,http://www.cs.sandia.gov/~sjplimp/chemcell.html)

:line

The Pizza.py documentation is organized into the following sections.
If you find errors or omissions in this manual or have suggestions for
useful information to add, please send an email to sjplimp@sandia.gov
so we can improve the Pizza.py documentation.

"PDF file"_Manual.pdf of the entire manual, generated by
"htmldoc"_http://www.easysw.com/htmldoc

"Introduction"_Section_intro.html :olb,l
  1.1 "What is Pizza.py"_1_1 :ulb,b
  1.2 "Open source distribution"_1_2 :b
  1.3 "Acknowledgements"_1_3 :ule,b
"Installing Pizza.py"_Section_install.html :l
  2.1 "Installing Python"_2_1 :ulb,b
  2.2 "Running Pizza.py"_2_2 :b
  2.3 "Setting up the DEFAULTS.py file"_2_3 :b
  2.4 "Installing additional Python packages"_2_4 :b
  2.5 "Installing other software"_2_5 :ule,b
"Basics of using Pizza.py"_Section_basics.html :l
  3.1 "Python syntax"_3_1 :ulb,b
  3.2 "Pizza.py command line arguments"_3_2 :b
  3.3 "Pizza.py extensions to the Python interpreter"_3_3 :b
  3.4 "Using Pizza.py tools"_3_4 :b
  3.5 "Runnning Pizza.py and Python scripts"_3_5 :b
  3.6 "Error messages"_3_6 :ule,b
"Tools within Pizza.py"_Section_tools.html :l
"Example scripts"_Section_examples.html :l
"Extending Pizza.py"_Section_extend.html :l
:ole

:line

List of tools in Pizza.py:

"animate.py"_animate.html; Animate a series of image files
"cdata.py"_cdata.html; Read, write, manipulate ChemCell data files
"chain.py"_chain.html; Create bead-spring chains for LAMMPS input
"clog.py"_clog.html; Read ChemCell log files and extract species data
"data.py"_data.html; Read, write, manipulate LAMMPS data files
"dump.py"_dump.html; Read, write, manipulate dump files and particle attributes
"gl.py"_gl.html; 3d interactive visualization via OpenGL
"gnu.py"_gnu.html; Create plots via "GnuPlot"_gnuplot plotting program
"histo.py"_histo.html; Particle density histogram from a dump
"image.py"_image.html; View and manipulate images
"log.py"_log.html; Read LAMMPS log files and extract thermodynamic data
"matlab.py"_matlab.html; Create plots via "MatLab"_matlab numerical analysis program
"pair.py"_pair.html; Compute LAMMPS pairwise energies
"patch.py"_patch.html; Create patchy Lennard-Jones particles for LAMMPS input
"pdbfile.py"_pdbfile.html; Read, write PDB files in combo with LAMMPS snapshots
"plotview.py"_plotview.html; Plot multiple vectors from a data set
"rasmol.py"_rasmol.html; 3d visualization via "RasMol"_rasmol program
"raster.py"_raster.html; 3d visualization via "Raster3d"_raster3d program
"svg.py"_svg.html; 3d visualization via "SVG"_svg files
"vcr.py"_vcr.html; VCR-style GUI for 3d interactive OpenGL visualization
"vec.py"_vec.html; Read columns of numbers from a file
"vtk.py"_vtk.html; Convert LAMMPS snapshots to VTK format
"xyz.py"_xyz.html; Convert LAMMPS snapshots to XYZ format :tb(s=;)

:link(gnuplot,http://www.gnuplot.info)
:link(matlab,http://www.mathworks.com)
:link(rasmol,http://www.openrasmol.org)
:link(raster3d,http://www.bmsc.washington.edu/raster3d/raster3d.html)
:link(svg,http://www.w3.org/Graphics/SVG)

:link(1_1,Section_intro.html#1_1)
:link(1_2,Section_intro.html#1_2)
:link(1_3,Section_intro.html#1_3)

:link(2_1,Section_install.html#2_1)
:link(2_2,Section_install.html#2_2)
:link(2_3,Section_install.html#2_3)
:link(2_4,Section_install.html#2_4)
:link(2_5,Section_install.html#2_5)

:link(3_1,Section_basics.html#3_1)
:link(3_2,Section_basics.html#3_2)
:link(3_3,Section_basics.html#3_3)
:link(3_4,Section_basics.html#3_4)
:link(3_5,Section_basics.html#3_5)
:link(3_6,Section_basics.html#3_6)
